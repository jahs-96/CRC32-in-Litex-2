$version Generated by VerilatedVcd $end
$date Tue Apr 15 22:01:43 2025
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  8 2) serial_sink_data [7:0] $end
  $var wire  1 3) serial_sink_ready $end
  $var wire  1 4) serial_sink_valid $end
  $var wire  8 5) serial_source_data [7:0] $end
  $var wire  1 6) serial_source_ready $end
  $var wire  1 7) serial_source_valid $end
  $var wire  1 8) sim_trace $end
  $var wire  1 9) sys_clk $end
  $scope module sim $end
   $var wire 15 ) adr [14:0] $end
   $var wire  1 m) adr_burst $end
   $var wire 30 * array_muxed0 [29:0] $end
   $var wire 32 + array_muxed1 [31:0] $end
   $var wire  4 , array_muxed2 [3:0] $end
   $var wire  1 - array_muxed3 $end
   $var wire  1 . array_muxed4 $end
   $var wire  1 / array_muxed5 $end
   $var wire  3 0 array_muxed6 [2:0] $end
   $var wire  2 # array_muxed7 [1:0] $end
   $var wire  1 1 bus_error $end
   $var wire 32 2 bus_errors [31:0] $end
   $var wire  1 3 bus_errors_re $end
   $var wire 32 2 bus_errors_status [31:0] $end
   $var wire  1 4 bus_errors_we $end
   $var wire 20 5 count [19:0] $end
   $var wire  1 6 cpu_rst $end
   $var wire  6 7 csr_bankarray_adr [5:0] $end
   $var wire 32 8 csr_bankarray_csrbank0_bus_errors_r [31:0] $end
   $var wire  1 9 csr_bankarray_csrbank0_bus_errors_re $end
   $var wire 32 2 csr_bankarray_csrbank0_bus_errors_w [31:0] $end
   $var wire  1 4 csr_bankarray_csrbank0_bus_errors_we $end
   $var wire  2 : csr_bankarray_csrbank0_reset0_r [1:0] $end
   $var wire  1 ; csr_bankarray_csrbank0_reset0_re $end
   $var wire  2 < csr_bankarray_csrbank0_reset0_w [1:0] $end
   $var wire  1 = csr_bankarray_csrbank0_reset0_we $end
   $var wire 32 8 csr_bankarray_csrbank0_scratch0_r [31:0] $end
   $var wire  1 > csr_bankarray_csrbank0_scratch0_re $end
   $var wire 32 ? csr_bankarray_csrbank0_scratch0_w [31:0] $end
   $var wire  1 @ csr_bankarray_csrbank0_scratch0_we $end
   $var wire  1 A csr_bankarray_csrbank0_sel $end
   $var wire  1 B csr_bankarray_csrbank1_en0_r $end
   $var wire  1 C csr_bankarray_csrbank1_en0_re $end
   $var wire  1 D csr_bankarray_csrbank1_en0_w $end
   $var wire  1 E csr_bankarray_csrbank1_en0_we $end
   $var wire  1 B csr_bankarray_csrbank1_ev_enable0_r $end
   $var wire  1 F csr_bankarray_csrbank1_ev_enable0_re $end
   $var wire  1 G csr_bankarray_csrbank1_ev_enable0_w $end
   $var wire  1 H csr_bankarray_csrbank1_ev_enable0_we $end
   $var wire  1 B csr_bankarray_csrbank1_ev_pending_r $end
   $var wire  1 I csr_bankarray_csrbank1_ev_pending_re $end
   $var wire  1 J csr_bankarray_csrbank1_ev_pending_w $end
   $var wire  1 K csr_bankarray_csrbank1_ev_pending_we $end
   $var wire  1 B csr_bankarray_csrbank1_ev_status_r $end
   $var wire  1 L csr_bankarray_csrbank1_ev_status_re $end
   $var wire  1 M csr_bankarray_csrbank1_ev_status_w $end
   $var wire  1 N csr_bankarray_csrbank1_ev_status_we $end
   $var wire 32 8 csr_bankarray_csrbank1_load0_r [31:0] $end
   $var wire  1 O csr_bankarray_csrbank1_load0_re $end
   $var wire 32 P csr_bankarray_csrbank1_load0_w [31:0] $end
   $var wire  1 Q csr_bankarray_csrbank1_load0_we $end
   $var wire 32 8 csr_bankarray_csrbank1_reload0_r [31:0] $end
   $var wire  1 R csr_bankarray_csrbank1_reload0_re $end
   $var wire 32 S csr_bankarray_csrbank1_reload0_w [31:0] $end
   $var wire  1 T csr_bankarray_csrbank1_reload0_we $end
   $var wire  1 U csr_bankarray_csrbank1_sel $end
   $var wire  1 B csr_bankarray_csrbank1_update_value0_r $end
   $var wire  1 V csr_bankarray_csrbank1_update_value0_re $end
   $var wire  1 W csr_bankarray_csrbank1_update_value0_w $end
   $var wire  1 X csr_bankarray_csrbank1_update_value0_we $end
   $var wire 32 8 csr_bankarray_csrbank1_value_r [31:0] $end
   $var wire  1 Y csr_bankarray_csrbank1_value_re $end
   $var wire 32 Z csr_bankarray_csrbank1_value_w [31:0] $end
   $var wire  1 [ csr_bankarray_csrbank1_value_we $end
   $var wire  2 : csr_bankarray_csrbank2_ev_enable0_r [1:0] $end
   $var wire  1 \ csr_bankarray_csrbank2_ev_enable0_re $end
   $var wire  2 ] csr_bankarray_csrbank2_ev_enable0_w [1:0] $end
   $var wire  1 ^ csr_bankarray_csrbank2_ev_enable0_we $end
   $var wire  2 : csr_bankarray_csrbank2_ev_pending_r [1:0] $end
   $var wire  1 _ csr_bankarray_csrbank2_ev_pending_re $end
   $var wire  2 ` csr_bankarray_csrbank2_ev_pending_w [1:0] $end
   $var wire  1 a csr_bankarray_csrbank2_ev_pending_we $end
   $var wire  2 : csr_bankarray_csrbank2_ev_status_r [1:0] $end
   $var wire  1 b csr_bankarray_csrbank2_ev_status_re $end
   $var wire  2 c csr_bankarray_csrbank2_ev_status_w [1:0] $end
   $var wire  1 d csr_bankarray_csrbank2_ev_status_we $end
   $var wire  1 B csr_bankarray_csrbank2_rxempty_r $end
   $var wire  1 e csr_bankarray_csrbank2_rxempty_re $end
   $var wire  1 f csr_bankarray_csrbank2_rxempty_w $end
   $var wire  1 g csr_bankarray_csrbank2_rxempty_we $end
   $var wire  1 B csr_bankarray_csrbank2_rxfull_r $end
   $var wire  1 h csr_bankarray_csrbank2_rxfull_re $end
   $var wire  1 i csr_bankarray_csrbank2_rxfull_w $end
   $var wire  1 j csr_bankarray_csrbank2_rxfull_we $end
   $var wire  1 k csr_bankarray_csrbank2_sel $end
   $var wire  1 B csr_bankarray_csrbank2_txempty_r $end
   $var wire  1 l csr_bankarray_csrbank2_txempty_re $end
   $var wire  1 m csr_bankarray_csrbank2_txempty_w $end
   $var wire  1 n csr_bankarray_csrbank2_txempty_we $end
   $var wire  1 B csr_bankarray_csrbank2_txfull_r $end
   $var wire  1 o csr_bankarray_csrbank2_txfull_re $end
   $var wire  1 p csr_bankarray_csrbank2_txfull_w $end
   $var wire  1 q csr_bankarray_csrbank2_txfull_we $end
   $var wire  8 r csr_bankarray_dat_r [7:0] $end
   $var wire 14 s csr_bankarray_interface0_bank_bus_adr [13:0] $end
   $var wire 32 t csr_bankarray_interface0_bank_bus_dat_r [31:0] $end
   $var wire 32 8 csr_bankarray_interface0_bank_bus_dat_w [31:0] $end
   $var wire  1 u csr_bankarray_interface0_bank_bus_re $end
   $var wire  1 v csr_bankarray_interface0_bank_bus_we $end
   $var wire 14 s csr_bankarray_interface1_bank_bus_adr [13:0] $end
   $var wire 32 w csr_bankarray_interface1_bank_bus_dat_r [31:0] $end
   $var wire 32 8 csr_bankarray_interface1_bank_bus_dat_w [31:0] $end
   $var wire  1 u csr_bankarray_interface1_bank_bus_re $end
   $var wire  1 v csr_bankarray_interface1_bank_bus_we $end
   $var wire 14 s csr_bankarray_interface2_bank_bus_adr [13:0] $end
   $var wire 32 x csr_bankarray_interface2_bank_bus_dat_r [31:0] $end
   $var wire 32 8 csr_bankarray_interface2_bank_bus_dat_w [31:0] $end
   $var wire  1 u csr_bankarray_interface2_bank_bus_re $end
   $var wire  1 v csr_bankarray_interface2_bank_bus_we $end
   $var wire  1 y csr_bankarray_sel $end
   $var wire  1 z csr_bankarray_sel_r $end
   $var wire 14 s csr_bankarray_sram_bus_adr [13:0] $end
   $var wire 32 { csr_bankarray_sram_bus_dat_r [31:0] $end
   $var wire 32 8 csr_bankarray_sram_bus_dat_w [31:0] $end
   $var wire  1 u csr_bankarray_sram_bus_re $end
   $var wire  1 v csr_bankarray_sram_bus_we $end
   $var wire 14 s csr_interconnect_adr [13:0] $end
   $var wire 32 | csr_interconnect_dat_r [31:0] $end
   $var wire 32 8 csr_interconnect_dat_w [31:0] $end
   $var wire  1 u csr_interconnect_re $end
   $var wire  1 v csr_interconnect_we $end
   $var wire 32 } dat_r [31:0] $end
   $var wire  1 ~ dbus_ack $end
   $var wire 30 !! dbus_adr [29:0] $end
   $var wire  2 n) dbus_bte [1:0] $end
   $var wire  3 "! dbus_cti [2:0] $end
   $var wire  1 #! dbus_cyc $end
   $var wire 32 $! dbus_dat_r [31:0] $end
   $var wire 32 %! dbus_dat_w [31:0] $end
   $var wire  1 m) dbus_err $end
   $var wire  4 &! dbus_sel [3:0] $end
   $var wire  1 #! dbus_stb $end
   $var wire  1 '! dbus_we $end
   $var wire  1 (! done $end
   $var wire  1 1 error $end
   $var wire  1 )! grant $end
   $var wire  1 *! ibus_ack $end
   $var wire 30 +! ibus_adr [29:0] $end
   $var wire  2 n) ibus_bte [1:0] $end
   $var wire  3 ,! ibus_cti [2:0] $end
   $var wire  1 -! ibus_cyc $end
   $var wire 32 $! ibus_dat_r [31:0] $end
   $var wire 32 o) ibus_dat_w [31:0] $end
   $var wire  1 m) ibus_err $end
   $var wire  4 p) ibus_sel [3:0] $end
   $var wire  1 .! ibus_stb $end
   $var wire  1 m) ibus_we $end
   $var wire  1 /! int_rst $end
   $var wire  1 0! interface0_ack $end
   $var wire 30 * interface0_adr [29:0] $end
   $var wire  2 # interface0_bte [1:0] $end
   $var wire  3 0 interface0_cti [2:0] $end
   $var wire  1 1! interface0_cyc $end
   $var wire 32 2! interface0_dat_r [31:0] $end
   $var wire 32 + interface0_dat_w [31:0] $end
   $var wire  1 m) interface0_err $end
   $var wire  1 3! interface0_ram_bus_ack $end
   $var wire 30 * interface0_ram_bus_adr [29:0] $end
   $var wire  2 # interface0_ram_bus_bte [1:0] $end
   $var wire  3 0 interface0_ram_bus_cti [2:0] $end
   $var wire  1 4! interface0_ram_bus_cyc $end
   $var wire 32 5! interface0_ram_bus_dat_r [31:0] $end
   $var wire 32 + interface0_ram_bus_dat_w [31:0] $end
   $var wire  1 m) interface0_ram_bus_err $end
   $var wire  4 , interface0_ram_bus_sel [3:0] $end
   $var wire  1 . interface0_ram_bus_stb $end
   $var wire  1 / interface0_ram_bus_we $end
   $var wire  4 , interface0_sel [3:0] $end
   $var wire  1 . interface0_stb $end
   $var wire  1 / interface0_we $end
   $var wire 14 s interface1_adr [13:0] $end
   $var wire 32 | interface1_dat_r [31:0] $end
   $var wire 32 8 interface1_dat_w [31:0] $end
   $var wire  1 6! interface1_ram_bus_ack $end
   $var wire 30 * interface1_ram_bus_adr [29:0] $end
   $var wire  2 # interface1_ram_bus_bte [1:0] $end
   $var wire  3 0 interface1_ram_bus_cti [2:0] $end
   $var wire  1 7! interface1_ram_bus_cyc $end
   $var wire 32 8! interface1_ram_bus_dat_r [31:0] $end
   $var wire 32 + interface1_ram_bus_dat_w [31:0] $end
   $var wire  1 m) interface1_ram_bus_err $end
   $var wire  4 , interface1_ram_bus_sel [3:0] $end
   $var wire  1 . interface1_ram_bus_stb $end
   $var wire  1 / interface1_ram_bus_we $end
   $var wire  1 u interface1_re $end
   $var wire  1 v interface1_we $end
   $var wire 32 9! interrupt [31:0] $end
   $var wire 14 *" main_ram_adr0 [13:0] $end
   $var wire  6 +" mem_adr0 [5:0] $end
   $var wire  1 :! next_state $end
   $var wire  1 9) por_clk $end
   $var wire  1 ;! ram_bus_ack $end
   $var wire 30 * ram_bus_adr [29:0] $end
   $var wire  2 # ram_bus_bte [1:0] $end
   $var wire  3 0 ram_bus_cti [2:0] $end
   $var wire  1 <! ram_bus_cyc $end
   $var wire 32 } ram_bus_dat_r [31:0] $end
   $var wire 32 + ram_bus_dat_w [31:0] $end
   $var wire  1 m) ram_bus_err $end
   $var wire  4 , ram_bus_sel [3:0] $end
   $var wire  1 . ram_bus_stb $end
   $var wire  1 / ram_bus_we $end
   $var wire  2 =! request [1:0] $end
   $var wire  1 >! reset $end
   $var wire  1 ?! reset_re $end
   $var wire  2 < reset_storage [1:0] $end
   $var wire 32 } rom_dat0 [31:0] $end
   $var wire  1 @! scratch_re $end
   $var wire 32 ? scratch_storage [31:0] $end
   $var wire  8 2) serial_sink_data [7:0] $end
   $var wire  1 & serial_sink_ready $end
   $var wire  1 4) serial_sink_valid $end
   $var wire  8 ' serial_source_data [7:0] $end
   $var wire  1 6) serial_source_ready $end
   $var wire  1 ( serial_source_valid $end
   $var wire  1 A! shared_ack $end
   $var wire 30 * shared_adr [29:0] $end
   $var wire  2 # shared_bte [1:0] $end
   $var wire  3 0 shared_cti [2:0] $end
   $var wire  1 - shared_cyc $end
   $var wire 32 $! shared_dat_r [31:0] $end
   $var wire 32 + shared_dat_w [31:0] $end
   $var wire  1 m) shared_err $end
   $var wire  4 , shared_sel [3:0] $end
   $var wire  1 . shared_stb $end
   $var wire  1 / shared_we $end
   $var wire  1 l) sim_trace $end
   $var wire  1 B! sink_first $end
   $var wire  1 C! sink_last $end
   $var wire  8 ' sink_payload_data [7:0] $end
   $var wire  1 6) sink_ready $end
   $var wire  1 ( sink_valid $end
   $var wire  4 D! slave_sel [3:0] $end
   $var wire  4 E! slave_sel_r [3:0] $end
   $var wire  1 F! soc_rst $end
   $var wire  1 m) source_first $end
   $var wire  1 m) source_last $end
   $var wire  8 2) source_payload_data [7:0] $end
   $var wire  1 & source_ready $end
   $var wire  1 4) source_valid $end
   $var wire 11 G! sram0_adr [10:0] $end
   $var wire  1 m) sram0_adr_burst $end
   $var wire 32 5! sram0_dat_r [31:0] $end
   $var wire 32 + sram0_dat_w [31:0] $end
   $var wire  4 H! sram0_we [3:0] $end
   $var wire 14 I! sram1_adr [13:0] $end
   $var wire  1 m) sram1_adr_burst $end
   $var wire 32 8! sram1_dat_r [31:0] $end
   $var wire 32 + sram1_dat_w [31:0] $end
   $var wire  4 J! sram1_we [3:0] $end
   $var wire 11 )" sram_adr0 [10:0] $end
   $var wire  1 K! state $end
   $var wire 10 ," storage(0) [9:0] $end
   $var wire 10 -" storage(1) [9:0] $end
   $var wire 10 6" storage(10) [9:0] $end
   $var wire 10 7" storage(11) [9:0] $end
   $var wire 10 8" storage(12) [9:0] $end
   $var wire 10 9" storage(13) [9:0] $end
   $var wire 10 :" storage(14) [9:0] $end
   $var wire 10 ;" storage(15) [9:0] $end
   $var wire 10 ." storage(2) [9:0] $end
   $var wire 10 /" storage(3) [9:0] $end
   $var wire 10 0" storage(4) [9:0] $end
   $var wire 10 1" storage(5) [9:0] $end
   $var wire 10 2" storage(6) [9:0] $end
   $var wire 10 3" storage(7) [9:0] $end
   $var wire 10 4" storage(8) [9:0] $end
   $var wire 10 5" storage(9) [9:0] $end
   $var wire 10 <" storage_1(0) [9:0] $end
   $var wire 10 =" storage_1(1) [9:0] $end
   $var wire 10 F" storage_1(10) [9:0] $end
   $var wire 10 G" storage_1(11) [9:0] $end
   $var wire 10 H" storage_1(12) [9:0] $end
   $var wire 10 I" storage_1(13) [9:0] $end
   $var wire 10 J" storage_1(14) [9:0] $end
   $var wire 10 K" storage_1(15) [9:0] $end
   $var wire 10 >" storage_1(2) [9:0] $end
   $var wire 10 ?" storage_1(3) [9:0] $end
   $var wire 10 @" storage_1(4) [9:0] $end
   $var wire 10 A" storage_1(5) [9:0] $end
   $var wire 10 B" storage_1(6) [9:0] $end
   $var wire 10 C" storage_1(7) [9:0] $end
   $var wire 10 D" storage_1(8) [9:0] $end
   $var wire 10 E" storage_1(9) [9:0] $end
   $var wire 10 m! storage_1_dat0 [9:0] $end
   $var wire 10 i! storage_1_dat1 [9:0] $end
   $var wire 10 #" storage_dat0 [9:0] $end
   $var wire 10 }! storage_dat1 [9:0] $end
   $var wire  1 9) sys_clk $end
   $var wire  1 9) sys_clk_1 $end
   $var wire  1 /! sys_rst $end
   $var wire  1 L! timer_en_re $end
   $var wire  1 D timer_en_storage $end
   $var wire  1 M! timer_enable_re $end
   $var wire  1 G timer_enable_storage $end
   $var wire  1 N! timer_irq $end
   $var wire  1 O! timer_load_re $end
   $var wire 32 P timer_load_storage [31:0] $end
   $var wire  1 P! timer_pending_r $end
   $var wire  1 Q! timer_pending_re $end
   $var wire  1 J timer_pending_status $end
   $var wire  1 K timer_pending_we $end
   $var wire  1 R! timer_reload_re $end
   $var wire 32 S timer_reload_storage [31:0] $end
   $var wire  1 S! timer_status_re $end
   $var wire  1 M timer_status_status $end
   $var wire  1 N timer_status_we $end
   $var wire  1 T! timer_update_value_re $end
   $var wire  1 W timer_update_value_storage $end
   $var wire 32 U! timer_value [31:0] $end
   $var wire  1 V! timer_value_re $end
   $var wire 32 Z timer_value_status [31:0] $end
   $var wire  1 [ timer_value_we $end
   $var wire  1 M timer_zero0 $end
   $var wire  1 J timer_zero1 $end
   $var wire  1 G timer_zero2 $end
   $var wire  1 W! timer_zero_clear $end
   $var wire  1 J timer_zero_pending $end
   $var wire  1 M timer_zero_status $end
   $var wire  1 M timer_zero_trigger $end
   $var wire  1 X! timer_zero_trigger_d $end
   $var wire  1 Y! uart_enable_re $end
   $var wire  2 ] uart_enable_storage [1:0] $end
   $var wire  1 Z! uart_irq $end
   $var wire  2 [! uart_pending_r [1:0] $end
   $var wire  1 \! uart_pending_re $end
   $var wire  2 ` uart_pending_status [1:0] $end
   $var wire  1 a uart_pending_we $end
   $var wire  1 ]! uart_rx0 $end
   $var wire  1 ^! uart_rx1 $end
   $var wire  1 _! uart_rx2 $end
   $var wire  1 `! uart_rx_clear $end
   $var wire  4 a! uart_rx_fifo_consume [3:0] $end
   $var wire  1 b! uart_rx_fifo_do_read $end
   $var wire  1 m) uart_rx_fifo_fifo_in_first $end
   $var wire  1 m) uart_rx_fifo_fifo_in_last $end
   $var wire  8 2) uart_rx_fifo_fifo_in_payload_data [7:0] $end
   $var wire  1 c! uart_rx_fifo_fifo_out_first $end
   $var wire  1 d! uart_rx_fifo_fifo_out_last $end
   $var wire  8 e! uart_rx_fifo_fifo_out_payload_data [7:0] $end
   $var wire  5 f! uart_rx_fifo_level0 [4:0] $end
   $var wire  5 g! uart_rx_fifo_level1 [4:0] $end
   $var wire  4 h! uart_rx_fifo_produce [3:0] $end
   $var wire  4 a! uart_rx_fifo_rdport_adr [3:0] $end
   $var wire 10 i! uart_rx_fifo_rdport_dat_r [9:0] $end
   $var wire  1 b! uart_rx_fifo_rdport_re $end
   $var wire  1 `! uart_rx_fifo_re $end
   $var wire  1 ]! uart_rx_fifo_readable $end
   $var wire  1 m) uart_rx_fifo_replace $end
   $var wire  1 m) uart_rx_fifo_sink_first $end
   $var wire  1 m) uart_rx_fifo_sink_last $end
   $var wire  8 2) uart_rx_fifo_sink_payload_data [7:0] $end
   $var wire  1 & uart_rx_fifo_sink_ready $end
   $var wire  1 4) uart_rx_fifo_sink_valid $end
   $var wire  1 c! uart_rx_fifo_source_first $end
   $var wire  1 d! uart_rx_fifo_source_last $end
   $var wire  8 e! uart_rx_fifo_source_payload_data [7:0] $end
   $var wire  1 `! uart_rx_fifo_source_ready $end
   $var wire  1 ]! uart_rx_fifo_source_valid $end
   $var wire 10 :) uart_rx_fifo_syncfifo_din [9:0] $end
   $var wire 10 i! uart_rx_fifo_syncfifo_dout [9:0] $end
   $var wire  1 j! uart_rx_fifo_syncfifo_re $end
   $var wire  1 k! uart_rx_fifo_syncfifo_readable $end
   $var wire  1 4) uart_rx_fifo_syncfifo_we $end
   $var wire  1 & uart_rx_fifo_syncfifo_writable $end
   $var wire  4 l! uart_rx_fifo_wrport_adr [3:0] $end
   $var wire 10 m! uart_rx_fifo_wrport_dat_r [9:0] $end
   $var wire 10 :) uart_rx_fifo_wrport_dat_w [9:0] $end
   $var wire  1 ;) uart_rx_fifo_wrport_we $end
   $var wire  1 ^! uart_rx_pending $end
   $var wire  1 ]! uart_rx_status $end
   $var wire  1 ]! uart_rx_trigger $end
   $var wire  1 n! uart_rx_trigger_d $end
   $var wire  1 o! uart_rxempty_re $end
   $var wire  1 f uart_rxempty_status $end
   $var wire  1 g uart_rxempty_we $end
   $var wire  1 p! uart_rxfull_re $end
   $var wire  1 i uart_rxfull_status $end
   $var wire  1 j uart_rxfull_we $end
   $var wire  8 q! uart_rxtx_r [7:0] $end
   $var wire  1 r! uart_rxtx_re $end
   $var wire  8 e! uart_rxtx_w [7:0] $end
   $var wire  1 s! uart_rxtx_we $end
   $var wire  1 t! uart_status_re $end
   $var wire  2 c uart_status_status [1:0] $end
   $var wire  1 d uart_status_we $end
   $var wire  1 u! uart_tx0 $end
   $var wire  1 v! uart_tx1 $end
   $var wire  1 w! uart_tx2 $end
   $var wire  1 x! uart_tx_clear $end
   $var wire  4 y! uart_tx_fifo_consume [3:0] $end
   $var wire  1 <) uart_tx_fifo_do_read $end
   $var wire  1 m) uart_tx_fifo_fifo_in_first $end
   $var wire  1 m) uart_tx_fifo_fifo_in_last $end
   $var wire  8 q! uart_tx_fifo_fifo_in_payload_data [7:0] $end
   $var wire  1 B! uart_tx_fifo_fifo_out_first $end
   $var wire  1 C! uart_tx_fifo_fifo_out_last $end
   $var wire  8 ' uart_tx_fifo_fifo_out_payload_data [7:0] $end
   $var wire  5 z! uart_tx_fifo_level0 [4:0] $end
   $var wire  5 {! uart_tx_fifo_level1 [4:0] $end
   $var wire  4 |! uart_tx_fifo_produce [3:0] $end
   $var wire  4 y! uart_tx_fifo_rdport_adr [3:0] $end
   $var wire 10 }! uart_tx_fifo_rdport_dat_r [9:0] $end
   $var wire  1 <) uart_tx_fifo_rdport_re $end
   $var wire  1 6) uart_tx_fifo_re $end
   $var wire  1 ( uart_tx_fifo_readable $end
   $var wire  1 m) uart_tx_fifo_replace $end
   $var wire  1 m) uart_tx_fifo_sink_first $end
   $var wire  1 m) uart_tx_fifo_sink_last $end
   $var wire  8 q! uart_tx_fifo_sink_payload_data [7:0] $end
   $var wire  1 u! uart_tx_fifo_sink_ready $end
   $var wire  1 r! uart_tx_fifo_sink_valid $end
   $var wire  1 B! uart_tx_fifo_source_first $end
   $var wire  1 C! uart_tx_fifo_source_last $end
   $var wire  8 ' uart_tx_fifo_source_payload_data [7:0] $end
   $var wire  1 6) uart_tx_fifo_source_ready $end
   $var wire  1 ( uart_tx_fifo_source_valid $end
   $var wire 10 ~! uart_tx_fifo_syncfifo_din [9:0] $end
   $var wire 10 }! uart_tx_fifo_syncfifo_dout [9:0] $end
   $var wire  1 =) uart_tx_fifo_syncfifo_re $end
   $var wire  1 !" uart_tx_fifo_syncfifo_readable $end
   $var wire  1 r! uart_tx_fifo_syncfifo_we $end
   $var wire  1 u! uart_tx_fifo_syncfifo_writable $end
   $var wire  4 "" uart_tx_fifo_wrport_adr [3:0] $end
   $var wire 10 #" uart_tx_fifo_wrport_dat_r [9:0] $end
   $var wire 10 ~! uart_tx_fifo_wrport_dat_w [9:0] $end
   $var wire  1 $" uart_tx_fifo_wrport_we $end
   $var wire  1 v! uart_tx_pending $end
   $var wire  1 u! uart_tx_status $end
   $var wire  1 u! uart_tx_trigger $end
   $var wire  1 %" uart_tx_trigger_d $end
   $var wire  1 &" uart_txempty_re $end
   $var wire  1 m uart_txempty_status $end
   $var wire  1 n uart_txempty_we $end
   $var wire  1 '" uart_txfull_re $end
   $var wire  1 p uart_txfull_status $end
   $var wire  1 q uart_txfull_we $end
   $var wire  1 m) uart_uart_sink_first $end
   $var wire  1 m) uart_uart_sink_last $end
   $var wire  8 2) uart_uart_sink_payload_data [7:0] $end
   $var wire  1 & uart_uart_sink_ready $end
   $var wire  1 4) uart_uart_sink_valid $end
   $var wire  1 B! uart_uart_source_first $end
   $var wire  1 C! uart_uart_source_last $end
   $var wire  8 ' uart_uart_source_payload_data [7:0] $end
   $var wire  1 6) uart_uart_source_ready $end
   $var wire  1 ( uart_uart_source_valid $end
   $var wire 32 o) vexriscv [31:0] $end
   $var wire  1 (" wait_1 $end
   $scope module VexRiscv $end
    $var wire  2 r) AluBitwiseCtrlEnum_AND_1 [1:0] $end
    $var wire  2 q) AluBitwiseCtrlEnum_OR_1 [1:0] $end
    $var wire  2 n) AluBitwiseCtrlEnum_XOR_1 [1:0] $end
    $var wire  2 n) AluCtrlEnum_ADD_SUB [1:0] $end
    $var wire  2 r) AluCtrlEnum_BITWISE [1:0] $end
    $var wire  2 q) AluCtrlEnum_SLT_SLTU [1:0] $end
    $var wire  2 q) BranchCtrlEnum_B [1:0] $end
    $var wire  2 n) BranchCtrlEnum_INC [1:0] $end
    $var wire  2 r) BranchCtrlEnum_JAL [1:0] $end
    $var wire  2 s) BranchCtrlEnum_JALR [1:0] $end
    $var wire 32 ]# BranchPlugin_branchExceptionPort_payload_badAddr [31:0] $end
    $var wire  4 '* BranchPlugin_branchExceptionPort_payload_code [3:0] $end
    $var wire  1 p$ BranchPlugin_branchExceptionPort_valid $end
    $var wire  1 m) BranchPlugin_inDebugNoFetchFlag $end
    $var wire 32 ]# BranchPlugin_jumpInterface_payload [31:0] $end
    $var wire  1 Z$ BranchPlugin_jumpInterface_valid $end
    $var wire  1 l) CsrPlugin_allowEbreakException $end
    $var wire  1 l) CsrPlugin_allowException $end
    $var wire  1 l) CsrPlugin_allowInterrupts $end
    $var wire  1 s$ CsrPlugin_csrMapping_allowCsrSignal $end
    $var wire  1 m) CsrPlugin_csrMapping_doForceFailCsr $end
    $var wire  1 t$ CsrPlugin_csrMapping_hazardFree $end
    $var wire 32 q$ CsrPlugin_csrMapping_readDataInit [31:0] $end
    $var wire 32 q$ CsrPlugin_csrMapping_readDataSignal [31:0] $end
    $var wire 32 r$ CsrPlugin_csrMapping_writeDataSignal [31:0] $end
    $var wire  1 L& CsrPlugin_exception $end
    $var wire  1 w$ CsrPlugin_exceptionPendings_0 $end
    $var wire  1 x$ CsrPlugin_exceptionPendings_1 $end
    $var wire  1 y$ CsrPlugin_exceptionPendings_2 $end
    $var wire  1 z$ CsrPlugin_exceptionPendings_3 $end
    $var wire 32 N& CsrPlugin_exceptionPortCtrl_exceptionContext_badAddr [31:0] $end
    $var wire  4 M& CsrPlugin_exceptionPortCtrl_exceptionContext_code [3:0] $end
    $var wire  2 s) CsrPlugin_exceptionPortCtrl_exceptionTargetPrivilege [1:0] $end
    $var wire  2 s) CsrPlugin_exceptionPortCtrl_exceptionTargetPrivilegeUncapped [1:0] $end
    $var wire  1 w$ CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_decode $end
    $var wire  1 x$ CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_execute $end
    $var wire  1 y$ CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_memory $end
    $var wire  1 z$ CsrPlugin_exceptionPortCtrl_exceptionValidsRegs_writeBack $end
    $var wire  1 I& CsrPlugin_exceptionPortCtrl_exceptionValids_decode $end
    $var wire  1 J& CsrPlugin_exceptionPortCtrl_exceptionValids_execute $end
    $var wire  1 K& CsrPlugin_exceptionPortCtrl_exceptionValids_memory $end
    $var wire  1 L& CsrPlugin_exceptionPortCtrl_exceptionValids_writeBack $end
    $var wire  1 m) CsrPlugin_forceMachineWire $end
    $var wire  1 J) CsrPlugin_hadException $end
    $var wire  1 D) CsrPlugin_inWfi $end
    $var wire  1 I) CsrPlugin_interruptJump $end
    $var wire  4 H) CsrPlugin_interrupt_code [3:0] $end
    $var wire  2 Q& CsrPlugin_interrupt_targetPrivilege [1:0] $end
    $var wire  1 P& CsrPlugin_interrupt_valid $end
    $var wire 32 v$ CsrPlugin_jumpInterface_payload [31:0] $end
    $var wire  1 u$ CsrPlugin_jumpInterface_valid $end
    $var wire  1 m) CsrPlugin_lastStageWasWfi $end
    $var wire  4 C& CsrPlugin_mcause_exceptionCode [3:0] $end
    $var wire  1 B& CsrPlugin_mcause_interrupt $end
    $var wire 64 E& CsrPlugin_mcycle [63:0] $end
    $var wire 32 8& CsrPlugin_mepc [31:0] $end
    $var wire  1 ?& CsrPlugin_mie_MEIE $end
    $var wire  1 A& CsrPlugin_mie_MSIE $end
    $var wire  1 @& CsrPlugin_mie_MTIE $end
    $var wire 64 G& CsrPlugin_minstret [63:0] $end
    $var wire  1 <& CsrPlugin_mip_MEIP $end
    $var wire  1 >& CsrPlugin_mip_MSIP $end
    $var wire  1 =& CsrPlugin_mip_MTIP $end
    $var wire  2 q) CsrPlugin_misa_base [1:0] $end
    $var wire 26 ** CsrPlugin_misa_extensions [25:0] $end
    $var wire  1 9& CsrPlugin_mstatus_MIE $end
    $var wire  1 :& CsrPlugin_mstatus_MPIE $end
    $var wire  2 ;& CsrPlugin_mstatus_MPP [1:0] $end
    $var wire 32 D& CsrPlugin_mtval [31:0] $end
    $var wire 30 7& CsrPlugin_mtvec_base [29:0] $end
    $var wire  2 +* CsrPlugin_mtvec_mode [1:0] $end
    $var wire  1 X& CsrPlugin_pipelineLiberator_active $end
    $var wire  1 Z& CsrPlugin_pipelineLiberator_done $end
    $var wire  1 U& CsrPlugin_pipelineLiberator_pcValids_0 $end
    $var wire  1 V& CsrPlugin_pipelineLiberator_pcValids_1 $end
    $var wire  1 W& CsrPlugin_pipelineLiberator_pcValids_2 $end
    $var wire  2 s) CsrPlugin_privilege [1:0] $end
    $var wire 32 *$ CsrPlugin_selfException_payload_badAddr [31:0] $end
    $var wire  4 }$ CsrPlugin_selfException_payload_code [3:0] $end
    $var wire  1 |$ CsrPlugin_selfException_valid $end
    $var wire  2 \& CsrPlugin_targetPrivilege [1:0] $end
    $var wire  1 m) CsrPlugin_thirdPartyWake $end
    $var wire  4 ]& CsrPlugin_trapCause [3:0] $end
    $var wire  1 m) CsrPlugin_trapCauseEbreakDebug $end
    $var wire  1 m) CsrPlugin_trapEnterDebug $end
    $var wire  1 m) CsrPlugin_xretAwayFromMachine $end
    $var wire 30 _& CsrPlugin_xtvec_base [29:0] $end
    $var wire  2 ^& CsrPlugin_xtvec_mode [1:0] $end
    $var wire 32 Z" DBusCachedPlugin_exceptionBus_payload_badAddr [31:0] $end
    $var wire  4 n$ DBusCachedPlugin_exceptionBus_payload_code [3:0] $end
    $var wire  1 m$ DBusCachedPlugin_exceptionBus_valid $end
    $var wire  1 m) DBusCachedPlugin_mmuBus_busy $end
    $var wire  1 m) DBusCachedPlugin_mmuBus_cmd_0_bypassTranslation $end
    $var wire  1 K$ DBusCachedPlugin_mmuBus_cmd_0_isStuck $end
    $var wire  1 U" DBusCachedPlugin_mmuBus_cmd_0_isValid $end
    $var wire 32 V" DBusCachedPlugin_mmuBus_cmd_0_virtualAddress [31:0] $end
    $var wire  1 k$ DBusCachedPlugin_mmuBus_end $end
    $var wire  1 l) DBusCachedPlugin_mmuBus_rsp_allowExecute $end
    $var wire  1 l) DBusCachedPlugin_mmuBus_rsp_allowRead $end
    $var wire  1 l) DBusCachedPlugin_mmuBus_rsp_allowWrite $end
    $var wire  1 %* DBusCachedPlugin_mmuBus_rsp_bypassTranslation $end
    $var wire  1 m) DBusCachedPlugin_mmuBus_rsp_exception $end
    $var wire  1 W" DBusCachedPlugin_mmuBus_rsp_isIoAccess $end
    $var wire  1 m) DBusCachedPlugin_mmuBus_rsp_isPaging $end
    $var wire 32 V" DBusCachedPlugin_mmuBus_rsp_physicalAddress [31:0] $end
    $var wire  1 m) DBusCachedPlugin_mmuBus_rsp_refilling $end
    $var wire 32 3$ DBusCachedPlugin_redoBranch_payload [31:0] $end
    $var wire  1 l$ DBusCachedPlugin_redoBranch_valid $end
    $var wire 32 ]% DBusCachedPlugin_rspCounter [31:0] $end
    $var wire  2 r) EnvCtrlEnum_ECALL [1:0] $end
    $var wire  2 n) EnvCtrlEnum_NONE [1:0] $end
    $var wire  2 q) EnvCtrlEnum_XRET [1:0] $end
    $var wire  1 |% HazardSimplePlugin_addr0Match $end
    $var wire  1 }% HazardSimplePlugin_addr1Match $end
    $var wire  1 t% HazardSimplePlugin_src0Hazard $end
    $var wire  1 u% HazardSimplePlugin_src1Hazard $end
    $var wire  5 z% HazardSimplePlugin_writeBackBuffer_payload_address [4:0] $end
    $var wire 32 {% HazardSimplePlugin_writeBackBuffer_payload_data [31:0] $end
    $var wire  1 y% HazardSimplePlugin_writeBackBuffer_valid $end
    $var wire  5 w% HazardSimplePlugin_writeBackWrites_payload_address [4:0] $end
    $var wire 32 x% HazardSimplePlugin_writeBackWrites_payload_data [31:0] $end
    $var wire  1 v% HazardSimplePlugin_writeBackWrites_valid $end
    $var wire  1 d" IBusCachedPlugin_cache_io_cpu_decode_cacheMiss $end
    $var wire 32 c" IBusCachedPlugin_cache_io_cpu_decode_data [31:0] $end
    $var wire  1 `" IBusCachedPlugin_cache_io_cpu_decode_error $end
    $var wire  1 P" IBusCachedPlugin_cache_io_cpu_decode_isStuck $end
    $var wire  1 m) IBusCachedPlugin_cache_io_cpu_decode_isUser $end
    $var wire  1 Q" IBusCachedPlugin_cache_io_cpu_decode_isValid $end
    $var wire  1 b" IBusCachedPlugin_cache_io_cpu_decode_mmuException $end
    $var wire  1 a" IBusCachedPlugin_cache_io_cpu_decode_mmuRefilling $end
    $var wire 32 e" IBusCachedPlugin_cache_io_cpu_decode_physicalAddress [31:0] $end
    $var wire 32 _" IBusCachedPlugin_cache_io_cpu_fetch_data [31:0] $end
    $var wire  1 t) IBusCachedPlugin_cache_io_cpu_fetch_isRemoved $end
    $var wire  1 P" IBusCachedPlugin_cache_io_cpu_fetch_isStuck $end
    $var wire  1 O" IBusCachedPlugin_cache_io_cpu_fetch_isValid $end
    $var wire 32 >) IBusCachedPlugin_cache_io_cpu_fetch_physicalAddress [31:0] $end
    $var wire  1 R" IBusCachedPlugin_cache_io_cpu_fill_valid $end
    $var wire  1 ^" IBusCachedPlugin_cache_io_cpu_prefetch_haltIt $end
    $var wire  1 N" IBusCachedPlugin_cache_io_cpu_prefetch_isValid $end
    $var wire  1 M" IBusCachedPlugin_cache_io_flush $end
    $var wire 32 g" IBusCachedPlugin_cache_io_mem_cmd_payload_address [31:0] $end
    $var wire  3 ~) IBusCachedPlugin_cache_io_mem_cmd_payload_size [2:0] $end
    $var wire  1 f" IBusCachedPlugin_cache_io_mem_cmd_valid $end
    $var wire 32 a$ IBusCachedPlugin_decodeExceptionPort_payload_badAddr [31:0] $end
    $var wire  4 `$ IBusCachedPlugin_decodeExceptionPort_payload_code [3:0] $end
    $var wire  1 _$ IBusCachedPlugin_decodeExceptionPort_valid $end
    $var wire  1 .# IBusCachedPlugin_decodePrediction_cmd_hadBranch $end
    $var wire  1 Z$ IBusCachedPlugin_decodePrediction_rsp_wasWrong $end
    $var wire  1 ~$ IBusCachedPlugin_externalFlush $end
    $var wire  1 *% IBusCachedPlugin_fetchPc_booted $end
    $var wire  1 (% IBusCachedPlugin_fetchPc_corrected $end
    $var wire  1 %% IBusCachedPlugin_fetchPc_correction $end
    $var wire  1 &% IBusCachedPlugin_fetchPc_correctionReg $end
    $var wire  1 /% IBusCachedPlugin_fetchPc_flushed $end
    $var wire  1 +% IBusCachedPlugin_fetchPc_inc $end
    $var wire  1 '% IBusCachedPlugin_fetchPc_output_fire $end
    $var wire 32 $% IBusCachedPlugin_fetchPc_output_payload [31:0] $end
    $var wire  1 #% IBusCachedPlugin_fetchPc_output_ready $end
    $var wire  1 N" IBusCachedPlugin_fetchPc_output_valid $end
    $var wire 32 $% IBusCachedPlugin_fetchPc_pc [31:0] $end
    $var wire 32 >) IBusCachedPlugin_fetchPc_pcReg [31:0] $end
    $var wire  1 )% IBusCachedPlugin_fetchPc_pcRegPropagate $end
    $var wire 32 2$ IBusCachedPlugin_fetchPc_redo_payload [31:0] $end
    $var wire  1 .% IBusCachedPlugin_fetchPc_redo_valid $end
    $var wire  1 V$ IBusCachedPlugin_fetcherHalt $end
    $var wire  1 m) IBusCachedPlugin_forceNoDecodeCond $end
    $var wire  1 8% IBusCachedPlugin_iBusRsp_flush $end
    $var wire  1 )* IBusCachedPlugin_iBusRsp_output_payload_isRvc $end
    $var wire 32 2$ IBusCachedPlugin_iBusRsp_output_payload_pc [31:0] $end
    $var wire  1 (* IBusCachedPlugin_iBusRsp_output_payload_rsp_error $end
    $var wire 32 c" IBusCachedPlugin_iBusRsp_output_payload_rsp_inst [31:0] $end
    $var wire  1 6% IBusCachedPlugin_iBusRsp_output_ready $end
    $var wire  1 8$ IBusCachedPlugin_iBusRsp_output_valid $end
    $var wire  1 9% IBusCachedPlugin_iBusRsp_readyForError $end
    $var wire  1 .% IBusCachedPlugin_iBusRsp_redoFetch $end
    $var wire  1 3% IBusCachedPlugin_iBusRsp_stages_0_halt $end
    $var wire 32 $% IBusCachedPlugin_iBusRsp_stages_0_input_payload [31:0] $end
    $var wire  1 #% IBusCachedPlugin_iBusRsp_stages_0_input_ready $end
    $var wire  1 N" IBusCachedPlugin_iBusRsp_stages_0_input_valid $end
    $var wire 32 $% IBusCachedPlugin_iBusRsp_stages_0_output_payload [31:0] $end
    $var wire  1 2% IBusCachedPlugin_iBusRsp_stages_0_output_ready $end
    $var wire  1 1% IBusCachedPlugin_iBusRsp_stages_0_output_valid $end
    $var wire  1 m) IBusCachedPlugin_iBusRsp_stages_1_halt $end
    $var wire 32 >) IBusCachedPlugin_iBusRsp_stages_1_input_payload [31:0] $end
    $var wire  1 2% IBusCachedPlugin_iBusRsp_stages_1_input_ready $end
    $var wire  1 4% IBusCachedPlugin_iBusRsp_stages_1_input_valid $end
    $var wire 32 2$ IBusCachedPlugin_iBusRsp_stages_1_output_m2sPipe_payload [31:0] $end
    $var wire  1 2% IBusCachedPlugin_iBusRsp_stages_1_output_m2sPipe_ready $end
    $var wire  1 5% IBusCachedPlugin_iBusRsp_stages_1_output_m2sPipe_valid $end
    $var wire 32 >) IBusCachedPlugin_iBusRsp_stages_1_output_payload [31:0] $end
    $var wire  1 2% IBusCachedPlugin_iBusRsp_stages_1_output_ready $end
    $var wire  1 4% IBusCachedPlugin_iBusRsp_stages_1_output_valid $end
    $var wire  1 7% IBusCachedPlugin_iBusRsp_stages_2_halt $end
    $var wire 32 2$ IBusCachedPlugin_iBusRsp_stages_2_input_payload [31:0] $end
    $var wire  1 2% IBusCachedPlugin_iBusRsp_stages_2_input_ready $end
    $var wire  1 5% IBusCachedPlugin_iBusRsp_stages_2_input_valid $end
    $var wire 32 2$ IBusCachedPlugin_iBusRsp_stages_2_output_payload [31:0] $end
    $var wire  1 6% IBusCachedPlugin_iBusRsp_stages_2_output_ready $end
    $var wire  1 8$ IBusCachedPlugin_iBusRsp_stages_2_output_valid $end
    $var wire  1 W$ IBusCachedPlugin_incomingInstruction $end
    $var wire  1 <% IBusCachedPlugin_injector_nextPcCalc_valids_0 $end
    $var wire  1 [$ IBusCachedPlugin_injector_nextPcCalc_valids_1 $end
    $var wire  1 \$ IBusCachedPlugin_injector_nextPcCalc_valids_2 $end
    $var wire  1 ]$ IBusCachedPlugin_injector_nextPcCalc_valids_3 $end
    $var wire  1 ^$ IBusCachedPlugin_injector_nextPcCalc_valids_4 $end
    $var wire 32 "% IBusCachedPlugin_jump_pcLoad_payload [31:0] $end
    $var wire  1 !% IBusCachedPlugin_jump_pcLoad_valid $end
    $var wire  1 m) IBusCachedPlugin_mmuBus_busy $end
    $var wire  1 m) IBusCachedPlugin_mmuBus_cmd_0_bypassTranslation $end
    $var wire  1 P" IBusCachedPlugin_mmuBus_cmd_0_isStuck $end
    $var wire  1 O" IBusCachedPlugin_mmuBus_cmd_0_isValid $end
    $var wire 32 >) IBusCachedPlugin_mmuBus_cmd_0_virtualAddress [31:0] $end
    $var wire  1 b$ IBusCachedPlugin_mmuBus_end $end
    $var wire  1 l) IBusCachedPlugin_mmuBus_rsp_allowExecute $end
    $var wire  1 l) IBusCachedPlugin_mmuBus_rsp_allowRead $end
    $var wire  1 l) IBusCachedPlugin_mmuBus_rsp_allowWrite $end
    $var wire  1 #* IBusCachedPlugin_mmuBus_rsp_bypassTranslation $end
    $var wire  1 m) IBusCachedPlugin_mmuBus_rsp_exception $end
    $var wire  1 C) IBusCachedPlugin_mmuBus_rsp_isIoAccess $end
    $var wire  1 m) IBusCachedPlugin_mmuBus_rsp_isPaging $end
    $var wire 32 >) IBusCachedPlugin_mmuBus_rsp_physicalAddress [31:0] $end
    $var wire  1 m) IBusCachedPlugin_mmuBus_rsp_refilling $end
    $var wire  1 [$ IBusCachedPlugin_pcValids_0 $end
    $var wire  1 \$ IBusCachedPlugin_pcValids_1 $end
    $var wire  1 ]$ IBusCachedPlugin_pcValids_2 $end
    $var wire  1 ^$ IBusCachedPlugin_pcValids_3 $end
    $var wire 32 Y$ IBusCachedPlugin_predictionJumpInterface_payload [31:0] $end
    $var wire  1 X$ IBusCachedPlugin_predictionJumpInterface_valid $end
    $var wire 32 C% IBusCachedPlugin_rspCounter [31:0] $end
    $var wire  1 m) IBusCachedPlugin_rsp_iBusRspOutputHalt $end
    $var wire  1 m) IBusCachedPlugin_rsp_issueDetected $end
    $var wire  1 0$ IBusCachedPlugin_rsp_issueDetected_1 $end
    $var wire  1 /$ IBusCachedPlugin_rsp_issueDetected_2 $end
    $var wire  1 .$ IBusCachedPlugin_rsp_issueDetected_3 $end
    $var wire  1 -$ IBusCachedPlugin_rsp_issueDetected_4 $end
    $var wire  1 F% IBusCachedPlugin_rsp_redoFetch $end
    $var wire  1 m) IBusCachedPlugin_s0_tightlyCoupledHit $end
    $var wire  1 D% IBusCachedPlugin_s1_tightlyCoupledHit $end
    $var wire  1 E% IBusCachedPlugin_s2_tightlyCoupledHit $end
    $var wire 32 K) RegFilePlugin_regFile(0) [31:0] $end
    $var wire 32 L) RegFilePlugin_regFile(1) [31:0] $end
    $var wire 32 U) RegFilePlugin_regFile(10) [31:0] $end
    $var wire 32 V) RegFilePlugin_regFile(11) [31:0] $end
    $var wire 32 W) RegFilePlugin_regFile(12) [31:0] $end
    $var wire 32 X) RegFilePlugin_regFile(13) [31:0] $end
    $var wire 32 Y) RegFilePlugin_regFile(14) [31:0] $end
    $var wire 32 Z) RegFilePlugin_regFile(15) [31:0] $end
    $var wire 32 [) RegFilePlugin_regFile(16) [31:0] $end
    $var wire 32 \) RegFilePlugin_regFile(17) [31:0] $end
    $var wire 32 ]) RegFilePlugin_regFile(18) [31:0] $end
    $var wire 32 ^) RegFilePlugin_regFile(19) [31:0] $end
    $var wire 32 M) RegFilePlugin_regFile(2) [31:0] $end
    $var wire 32 _) RegFilePlugin_regFile(20) [31:0] $end
    $var wire 32 `) RegFilePlugin_regFile(21) [31:0] $end
    $var wire 32 a) RegFilePlugin_regFile(22) [31:0] $end
    $var wire 32 b) RegFilePlugin_regFile(23) [31:0] $end
    $var wire 32 c) RegFilePlugin_regFile(24) [31:0] $end
    $var wire 32 d) RegFilePlugin_regFile(25) [31:0] $end
    $var wire 32 e) RegFilePlugin_regFile(26) [31:0] $end
    $var wire 32 f) RegFilePlugin_regFile(27) [31:0] $end
    $var wire 32 g) RegFilePlugin_regFile(28) [31:0] $end
    $var wire 32 h) RegFilePlugin_regFile(29) [31:0] $end
    $var wire 32 N) RegFilePlugin_regFile(3) [31:0] $end
    $var wire 32 i) RegFilePlugin_regFile(30) [31:0] $end
    $var wire 32 j) RegFilePlugin_regFile(31) [31:0] $end
    $var wire 32 O) RegFilePlugin_regFile(4) [31:0] $end
    $var wire 32 P) RegFilePlugin_regFile(5) [31:0] $end
    $var wire 32 Q) RegFilePlugin_regFile(6) [31:0] $end
    $var wire 32 R) RegFilePlugin_regFile(7) [31:0] $end
    $var wire 32 S) RegFilePlugin_regFile(8) [31:0] $end
    $var wire 32 T) RegFilePlugin_regFile(9) [31:0] $end
    $var wire  2 n) ShiftCtrlEnum_DISABLE_1 [1:0] $end
    $var wire  2 q) ShiftCtrlEnum_SLL_1 [1:0] $end
    $var wire  2 s) ShiftCtrlEnum_SRA_1 [1:0] $end
    $var wire  2 r) ShiftCtrlEnum_SRL_1 [1:0] $end
    $var wire  2 q) Src1CtrlEnum_IMU [1:0] $end
    $var wire  2 r) Src1CtrlEnum_PC_INCREMENT [1:0] $end
    $var wire  2 n) Src1CtrlEnum_RS [1:0] $end
    $var wire  2 s) Src1CtrlEnum_URS1 [1:0] $end
    $var wire  2 q) Src2CtrlEnum_IMI [1:0] $end
    $var wire  2 r) Src2CtrlEnum_IMS [1:0] $end
    $var wire  2 s) Src2CtrlEnum_PC [1:0] $end
    $var wire  2 n) Src2CtrlEnum_RS [1:0] $end
    $var wire  1 9) clk $end
    $var wire  1 u$ contextSwitching $end
    $var wire  1 ~ dBusWishbone_ACK $end
    $var wire 30 !! dBusWishbone_ADR [29:0] $end
    $var wire  2 n) dBusWishbone_BTE [1:0] $end
    $var wire  3 "! dBusWishbone_CTI [2:0] $end
    $var wire  1 #! dBusWishbone_CYC $end
    $var wire 32 $! dBusWishbone_DAT_MISO [31:0] $end
    $var wire 32 j$ dBusWishbone_DAT_MISO_regNext [31:0] $end
    $var wire 32 %! dBusWishbone_DAT_MOSI [31:0] $end
    $var wire  1 m) dBusWishbone_ERR $end
    $var wire  4 &! dBusWishbone_SEL [3:0] $end
    $var wire  1 #! dBusWishbone_STB $end
    $var wire  1 '! dBusWishbone_WE $end
    $var wire 32 e$ dBus_cmd_payload_address [31:0] $end
    $var wire 32 %! dBus_cmd_payload_data [31:0] $end
    $var wire  1 h$ dBus_cmd_payload_last $end
    $var wire  4 f$ dBus_cmd_payload_mask [3:0] $end
    $var wire  3 g$ dBus_cmd_payload_size [2:0] $end
    $var wire  1 d$ dBus_cmd_payload_uncached $end
    $var wire  1 '! dBus_cmd_payload_wr $end
    $var wire  1 c$ dBus_cmd_ready $end
    $var wire  1 #! dBus_cmd_valid $end
    $var wire 32 j$ dBus_rsp_payload_data [31:0] $end
    $var wire  1 m) dBus_rsp_payload_error $end
    $var wire  1 $* dBus_rsp_payload_last $end
    $var wire  1 i$ dBus_rsp_valid $end
    $var wire 32 T" dataCache_1_io_cpu_execute_address [31:0] $end
    $var wire  1 h" dataCache_1_io_cpu_execute_haltIt $end
    $var wire  1 S" dataCache_1_io_cpu_execute_isValid $end
    $var wire  1 i" dataCache_1_io_cpu_execute_refilling $end
    $var wire  7 ]" dataCache_1_io_cpu_flush_payload_lineId [6:0] $end
    $var wire  1 \" dataCache_1_io_cpu_flush_payload_singleLine $end
    $var wire  1 q" dataCache_1_io_cpu_flush_ready $end
    $var wire  1 [" dataCache_1_io_cpu_flush_valid $end
    $var wire 32 V" dataCache_1_io_cpu_memory_address [31:0] $end
    $var wire  1 U" dataCache_1_io_cpu_memory_isValid $end
    $var wire  1 j" dataCache_1_io_cpu_memory_isWrite $end
    $var wire  1 W" dataCache_1_io_cpu_memory_mmuRsp_isIoAccess $end
    $var wire  1 r" dataCache_1_io_cpu_redo $end
    $var wire  1 o" dataCache_1_io_cpu_writeBack_accessError $end
    $var wire 32 Z" dataCache_1_io_cpu_writeBack_address [31:0] $end
    $var wire 32 l" dataCache_1_io_cpu_writeBack_data [31:0] $end
    $var wire  1 !* dataCache_1_io_cpu_writeBack_exclusiveOk $end
    $var wire  4 }) dataCache_1_io_cpu_writeBack_fence_FM [3:0] $end
    $var wire  1 |) dataCache_1_io_cpu_writeBack_fence_PI $end
    $var wire  1 {) dataCache_1_io_cpu_writeBack_fence_PO $end
    $var wire  1 z) dataCache_1_io_cpu_writeBack_fence_PR $end
    $var wire  1 y) dataCache_1_io_cpu_writeBack_fence_PW $end
    $var wire  1 x) dataCache_1_io_cpu_writeBack_fence_SI $end
    $var wire  1 w) dataCache_1_io_cpu_writeBack_fence_SO $end
    $var wire  1 v) dataCache_1_io_cpu_writeBack_fence_SR $end
    $var wire  1 u) dataCache_1_io_cpu_writeBack_fence_SW $end
    $var wire  1 k" dataCache_1_io_cpu_writeBack_haltIt $end
    $var wire  1 m) dataCache_1_io_cpu_writeBack_isUser $end
    $var wire  1 X" dataCache_1_io_cpu_writeBack_isValid $end
    $var wire  1 p" dataCache_1_io_cpu_writeBack_isWrite $end
    $var wire  1 m) dataCache_1_io_cpu_writeBack_keepMemRspData $end
    $var wire  1 m" dataCache_1_io_cpu_writeBack_mmuException $end
    $var wire 32 Y" dataCache_1_io_cpu_writeBack_storeData [31:0] $end
    $var wire  1 n" dataCache_1_io_cpu_writeBack_unalignedAccess $end
    $var wire  1 "* dataCache_1_io_cpu_writesPending $end
    $var wire 32 v" dataCache_1_io_mem_cmd_payload_address [31:0] $end
    $var wire 32 Y" dataCache_1_io_mem_cmd_payload_data [31:0] $end
    $var wire  1 l) dataCache_1_io_mem_cmd_payload_last $end
    $var wire  4 w" dataCache_1_io_mem_cmd_payload_mask [3:0] $end
    $var wire  3 x" dataCache_1_io_mem_cmd_payload_size [2:0] $end
    $var wire  1 u" dataCache_1_io_mem_cmd_payload_uncached $end
    $var wire  1 t" dataCache_1_io_mem_cmd_payload_wr $end
    $var wire  1 s" dataCache_1_io_mem_cmd_valid $end
    $var wire 32 c" decodeExceptionPort_payload_badAddr [31:0] $end
    $var wire  4 &* decodeExceptionPort_payload_code [3:0] $end
    $var wire  1 o$ decodeExceptionPort_valid $end
    $var wire  2 9# decode_ALU_BITWISE_CTRL [1:0] $end
    $var wire 40 N' decode_ALU_BITWISE_CTRL_string [39:0] $end
    $var wire  2 B# decode_ALU_CTRL [1:0] $end
    $var wire 64 Q' decode_ALU_CTRL_string [63:0] $end
    $var wire  2 1$ decode_BRANCH_CTRL [1:0] $end
    $var wire 32 k' decode_BRANCH_CTRL_string [31:0] $end
    $var wire  1 @# decode_BYPASSABLE_EXECUTE_STAGE $end
    $var wire  1 ?# decode_BYPASSABLE_MEMORY_STAGE $end
    $var wire  1 ,# decode_CSR_READ_OPCODE $end
    $var wire  1 -# decode_CSR_WRITE_OPCODE $end
    $var wire  2 6# decode_ENV_CTRL [1:0] $end
    $var wire 40 I' decode_ENV_CTRL_string [39:0] $end
    $var wire  1 ,$ decode_FLUSH_ALL $end
    $var wire 32 G# decode_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 c" decode_INSTRUCTION [31:0] $end
    $var wire 32 |# decode_INSTRUCTION_ANTICIPATED [31:0] $end
    $var wire  1 7# decode_IS_CSR $end
    $var wire  1 2# decode_IS_DIV $end
    $var wire  1 5# decode_IS_MUL $end
    $var wire  1 1# decode_IS_RS1_SIGNED $end
    $var wire  1 0# decode_IS_RS2_SIGNED $end
    $var wire  1 ~# decode_LEGAL_INSTRUCTION $end
    $var wire  1 +$ decode_MEMORY_ENABLE $end
    $var wire  1 m) decode_MEMORY_FORCE_CONSTISTENCY $end
    $var wire  1 ;# decode_MEMORY_MANAGMENT $end
    $var wire  1 =# decode_MEMORY_WR $end
    $var wire 32 2$ decode_PC [31:0] $end
    $var wire  1 .# decode_PREDICTION_HAD_BRANCHED2 $end
    $var wire  1 }# decode_REGFILE_WRITE_VALID $end
    $var wire 32 l# decode_RS1 [31:0] $end
    $var wire  1 d# decode_RS1_USE $end
    $var wire 32 k# decode_RS2 [31:0] $end
    $var wire  1 c# decode_RS2_USE $end
    $var wire  5 m% decode_RegFilePlugin_regFileReadAddress1 [4:0] $end
    $var wire  5 n% decode_RegFilePlugin_regFileReadAddress2 [4:0] $end
    $var wire 32 o% decode_RegFilePlugin_rs1Data [31:0] $end
    $var wire 32 p% decode_RegFilePlugin_rs2Data [31:0] $end
    $var wire  2 8# decode_SHIFT_CTRL [1:0] $end
    $var wire 72 K' decode_SHIFT_CTRL_string [71:0] $end
    $var wire  2 C# decode_SRC1_CTRL [1:0] $end
    $var wire 96 S' decode_SRC1_CTRL_string [95:0] $end
    $var wire  2 A# decode_SRC2_CTRL [1:0] $end
    $var wire 24 P' decode_SRC2_CTRL_string [23:0] $end
    $var wire  1 /# decode_SRC2_FORCE_ZERO $end
    $var wire  1 v# decode_SRC_ADD_ZERO $end
    $var wire  1 :# decode_SRC_LESS_UNSIGNED $end
    $var wire  1 u# decode_SRC_USE_SUB_LESS $end
    $var wire  1 m) decode_arbitration_flushIt $end
    $var wire  1 7$ decode_arbitration_flushNext $end
    $var wire  1 5$ decode_arbitration_haltByOther $end
    $var wire  1 m) decode_arbitration_haltItself $end
    $var wire  1 <$ decode_arbitration_isFiring $end
    $var wire  1 :$ decode_arbitration_isFlushed $end
    $var wire  1 ;$ decode_arbitration_isMoving $end
    $var wire  1 9$ decode_arbitration_isStuck $end
    $var wire  1 9$ decode_arbitration_isStuckByOthers $end
    $var wire  1 8$ decode_arbitration_isValid $end
    $var wire  1 6$ decode_arbitration_removeIt $end
    $var wire  2 {# decode_to_execute_ALU_BITWISE_CTRL [1:0] $end
    $var wire 40 i' decode_to_execute_ALU_BITWISE_CTRL_string [39:0] $end
    $var wire  2 x# decode_to_execute_ALU_CTRL [1:0] $end
    $var wire 64 g' decode_to_execute_ALU_CTRL_string [63:0] $end
    $var wire  2 b# decode_to_execute_BRANCH_CTRL [1:0] $end
    $var wire 32 \' decode_to_execute_BRANCH_CTRL_string [31:0] $end
    $var wire  1 f# decode_to_execute_BYPASSABLE_EXECUTE_STAGE $end
    $var wire  1 ># decode_to_execute_BYPASSABLE_MEMORY_STAGE $end
    $var wire  1 W# decode_to_execute_CSR_READ_OPCODE $end
    $var wire  1 X# decode_to_execute_CSR_WRITE_OPCODE $end
    $var wire  2 [# decode_to_execute_ENV_CTRL [1:0] $end
    $var wire 40 X' decode_to_execute_ENV_CTRL_string [39:0] $end
    $var wire 32 F# decode_to_execute_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 *$ decode_to_execute_INSTRUCTION [31:0] $end
    $var wire  1 Y# decode_to_execute_IS_CSR $end
    $var wire  1 J# decode_to_execute_IS_DIV $end
    $var wire  1 4# decode_to_execute_IS_MUL $end
    $var wire  1 I# decode_to_execute_IS_RS1_SIGNED $end
    $var wire  1 K# decode_to_execute_IS_RS2_SIGNED $end
    $var wire  1 )$ decode_to_execute_MEMORY_ENABLE $end
    $var wire  1 $$ decode_to_execute_MEMORY_FORCE_CONSTISTENCY $end
    $var wire  1 &$ decode_to_execute_MEMORY_MANAGMENT $end
    $var wire  1 ($ decode_to_execute_MEMORY_WR $end
    $var wire 32 _# decode_to_execute_PC [31:0] $end
    $var wire  1 `# decode_to_execute_PREDICTION_HAD_BRANCHED2 $end
    $var wire  1 e# decode_to_execute_REGFILE_WRITE_VALID $end
    $var wire 32 %$ decode_to_execute_RS1 [31:0] $end
    $var wire 32 '$ decode_to_execute_RS2 [31:0] $end
    $var wire  2 o# decode_to_execute_SHIFT_CTRL [1:0] $end
    $var wire 72 o' decode_to_execute_SHIFT_CTRL_string [71:0] $end
    $var wire  2 t# decode_to_execute_SRC1_CTRL [1:0] $end
    $var wire 96 l' decode_to_execute_SRC1_CTRL_string [95:0] $end
    $var wire  2 s# decode_to_execute_SRC2_CTRL [1:0] $end
    $var wire 24 c' decode_to_execute_SRC2_CTRL_string [23:0] $end
    $var wire  1 q# decode_to_execute_SRC2_FORCE_ZERO $end
    $var wire  1 p# decode_to_execute_SRC_LESS_UNSIGNED $end
    $var wire  1 r# decode_to_execute_SRC_USE_SUB_LESS $end
    $var wire  2 {# execute_ALU_BITWISE_CTRL [1:0] $end
    $var wire 40 i' execute_ALU_BITWISE_CTRL_string [39:0] $end
    $var wire  2 x# execute_ALU_CTRL [1:0] $end
    $var wire 64 g' execute_ALU_CTRL_string [63:0] $end
    $var wire 32 &# execute_BRANCH_CALC [31:0] $end
    $var wire  1 a# execute_BRANCH_COND_RESULT $end
    $var wire  2 b# execute_BRANCH_CTRL [1:0] $end
    $var wire 32 \' execute_BRANCH_CTRL_string [31:0] $end
    $var wire  1 '# execute_BRANCH_DO $end
    $var wire  1 f# execute_BYPASSABLE_EXECUTE_STAGE $end
    $var wire  1 ># execute_BYPASSABLE_MEMORY_STAGE $end
    $var wire 32 6& execute_BranchPlugin_branchAdder [31:0] $end
    $var wire 32 4& execute_BranchPlugin_branch_src1 [31:0] $end
    $var wire 32 5& execute_BranchPlugin_branch_src2 [31:0] $end
    $var wire  1 1& execute_BranchPlugin_eq $end
    $var wire  1 3& execute_BranchPlugin_missAlignedTarget $end
    $var wire  1 W# execute_CSR_READ_OPCODE $end
    $var wire  1 X# execute_CSR_WRITE_OPCODE $end
    $var wire  1 e& execute_CsrPlugin_blockedBySideEffects $end
    $var wire 12 o& execute_CsrPlugin_csrAddress [11:0] $end
    $var wire  1 B' execute_CsrPlugin_csr_3008 $end
    $var wire  1 :' execute_CsrPlugin_csr_3264 $end
    $var wire  1 C' execute_CsrPlugin_csr_4032 $end
    $var wire  1 ;' execute_CsrPlugin_csr_768 $end
    $var wire  1 =' execute_CsrPlugin_csr_772 $end
    $var wire  1 >' execute_CsrPlugin_csr_773 $end
    $var wire  1 ?' execute_CsrPlugin_csr_833 $end
    $var wire  1 @' execute_CsrPlugin_csr_834 $end
    $var wire  1 A' execute_CsrPlugin_csr_835 $end
    $var wire  1 <' execute_CsrPlugin_csr_836 $end
    $var wire  1 f& execute_CsrPlugin_illegalAccess $end
    $var wire  1 $ execute_CsrPlugin_illegalInstruction $end
    $var wire  1 l& execute_CsrPlugin_readEnable $end
    $var wire  1 j& execute_CsrPlugin_readInstruction $end
    $var wire 32 q$ execute_CsrPlugin_readToWriteData [31:0] $end
    $var wire  1 c& execute_CsrPlugin_wfiWake $end
    $var wire  1 k& execute_CsrPlugin_writeEnable $end
    $var wire  1 i& execute_CsrPlugin_writeInstruction $end
    $var wire  2 ^% execute_DBusCachedPlugin_size [1:0] $end
    $var wire  2 [# execute_ENV_CTRL [1:0] $end
    $var wire 40 X' execute_ENV_CTRL_string [39:0] $end
    $var wire 32 F# execute_FORMAL_PC_NEXT [31:0] $end
    $var wire  5 r% execute_FullBarrelShifterPlugin_amplitude [4:0] $end
    $var wire 32 s% execute_FullBarrelShifterPlugin_reversed [31:0] $end
    $var wire 32 *$ execute_INSTRUCTION [31:0] $end
    $var wire  1 Y# execute_IS_CSR $end
    $var wire  1 J# execute_IS_DIV $end
    $var wire  1 4# execute_IS_MUL $end
    $var wire  1 I# execute_IS_RS1_SIGNED $end
    $var wire  1 K# execute_IS_RS2_SIGNED $end
    $var wire 32 q% execute_IntAluPlugin_bitwise [31:0] $end
    $var wire  1 )$ execute_MEMORY_ENABLE $end
    $var wire  1 $$ execute_MEMORY_FORCE_CONSTISTENCY $end
    $var wire  1 &$ execute_MEMORY_MANAGMENT $end
    $var wire 32 +# execute_MEMORY_STORE_DATA_RF [31:0] $end
    $var wire  1 ($ execute_MEMORY_WR $end
    $var wire 34 }" execute_MUL_HH [33:0] $end
    $var wire 34 !# execute_MUL_HL [33:0] $end
    $var wire 34 ## execute_MUL_LH [33:0] $end
    $var wire 32 %# execute_MUL_LL [31:0] $end
    $var wire 32 %$ execute_MulPlugin_a [31:0] $end
    $var wire 17 v& execute_MulPlugin_aHigh [16:0] $end
    $var wire 17 t& execute_MulPlugin_aSLow [16:0] $end
    $var wire  1 p& execute_MulPlugin_aSigned $end
    $var wire 16 r& execute_MulPlugin_aULow [15:0] $end
    $var wire 32 '$ execute_MulPlugin_b [31:0] $end
    $var wire 17 w& execute_MulPlugin_bHigh [16:0] $end
    $var wire 17 u& execute_MulPlugin_bSLow [16:0] $end
    $var wire  1 q& execute_MulPlugin_bSigned $end
    $var wire 16 s& execute_MulPlugin_bULow [15:0] $end
    $var wire 32 _# execute_PC [31:0] $end
    $var wire  1 `# execute_PREDICTION_HAD_BRANCHED2 $end
    $var wire 32 )# execute_REGFILE_WRITE_DATA [31:0] $end
    $var wire  1 e# execute_REGFILE_WRITE_VALID $end
    $var wire 32 %$ execute_RS1 [31:0] $end
    $var wire 32 '$ execute_RS2 [31:0] $end
    $var wire  2 o# execute_SHIFT_CTRL [1:0] $end
    $var wire 72 `' execute_SHIFT_CTRL_string [71:0] $end
    $var wire 32 (# execute_SHIFT_RIGHT [31:0] $end
    $var wire 32 z# execute_SRC1 [31:0] $end
    $var wire  2 t# execute_SRC1_CTRL [1:0] $end
    $var wire 96 d' execute_SRC1_CTRL_string [95:0] $end
    $var wire 32 y# execute_SRC2 [31:0] $end
    $var wire  2 s# execute_SRC2_CTRL [1:0] $end
    $var wire 24 c' execute_SRC2_CTRL_string [23:0] $end
    $var wire  1 q# execute_SRC2_FORCE_ZERO $end
    $var wire 32 T" execute_SRC_ADD [31:0] $end
    $var wire 32 T" execute_SRC_ADD_SUB [31:0] $end
    $var wire  1 w# execute_SRC_LESS $end
    $var wire  1 p# execute_SRC_LESS_UNSIGNED $end
    $var wire  1 r# execute_SRC_USE_SUB_LESS $end
    $var wire 32 T" execute_SrcPlugin_addSub [31:0] $end
    $var wire  1 w# execute_SrcPlugin_less $end
    $var wire  1 m) execute_arbitration_flushIt $end
    $var wire  1 @$ execute_arbitration_flushNext $end
    $var wire  1 >$ execute_arbitration_haltByOther $end
    $var wire  1 =$ execute_arbitration_haltItself $end
    $var wire  1 F$ execute_arbitration_isFiring $end
    $var wire  1 D$ execute_arbitration_isFlushed $end
    $var wire  1 E$ execute_arbitration_isMoving $end
    $var wire  1 B$ execute_arbitration_isStuck $end
    $var wire  1 C$ execute_arbitration_isStuckByOthers $end
    $var wire  1 A$ execute_arbitration_isValid $end
    $var wire  1 ?$ execute_arbitration_removeIt $end
    $var wire 32 ]# execute_to_memory_BRANCH_CALC [31:0] $end
    $var wire  1 ^# execute_to_memory_BRANCH_DO $end
    $var wire  1 i# execute_to_memory_BYPASSABLE_MEMORY_STAGE $end
    $var wire  2 Z# execute_to_memory_ENV_CTRL [1:0] $end
    $var wire 40 V' execute_to_memory_ENV_CTRL_string [39:0] $end
    $var wire 32 E# execute_to_memory_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 h# execute_to_memory_INSTRUCTION [31:0] $end
    $var wire  1 L# execute_to_memory_IS_DIV $end
    $var wire  1 3# execute_to_memory_IS_MUL $end
    $var wire  1 #$ execute_to_memory_MEMORY_ENABLE $end
    $var wire 32 *# execute_to_memory_MEMORY_STORE_DATA_RF [31:0] $end
    $var wire  1 <# execute_to_memory_MEMORY_WR $end
    $var wire 34 {" execute_to_memory_MUL_HH [33:0] $end
    $var wire 34 R# execute_to_memory_MUL_HL [33:0] $end
    $var wire 34 T# execute_to_memory_MUL_LH [33:0] $end
    $var wire 32 V# execute_to_memory_MUL_LL [31:0] $end
    $var wire 32 H# execute_to_memory_PC [31:0] $end
    $var wire 32 V" execute_to_memory_REGFILE_WRITE_DATA [31:0] $end
    $var wire  1 g# execute_to_memory_REGFILE_WRITE_VALID $end
    $var wire  2 n# execute_to_memory_SHIFT_CTRL [1:0] $end
    $var wire 72 r' execute_to_memory_SHIFT_CTRL_string [71:0] $end
    $var wire 32 m# execute_to_memory_SHIFT_RIGHT [31:0] $end
    $var wire  1 {$ externalInterrupt $end
    $var wire 32 9! externalInterruptArray [31:0] $end
    $var wire 32 6' externalInterruptArray_regNext [31:0] $end
    $var wire 32 o) externalResetVector [31:0] $end
    $var wire  1 *! iBusWishbone_ACK $end
    $var wire 30 +! iBusWishbone_ADR [29:0] $end
    $var wire  2 n) iBusWishbone_BTE [1:0] $end
    $var wire  3 ,! iBusWishbone_CTI [2:0] $end
    $var wire  1 -! iBusWishbone_CYC $end
    $var wire 32 $! iBusWishbone_DAT_MISO [31:0] $end
    $var wire 32 B% iBusWishbone_DAT_MISO_regNext [31:0] $end
    $var wire 32 o) iBusWishbone_DAT_MOSI [31:0] $end
    $var wire  1 m) iBusWishbone_ERR $end
    $var wire  4 p) iBusWishbone_SEL [3:0] $end
    $var wire  1 .! iBusWishbone_STB $end
    $var wire  1 m) iBusWishbone_WE $end
    $var wire 32 g" iBus_cmd_payload_address [31:0] $end
    $var wire  3 ~) iBus_cmd_payload_size [2:0] $end
    $var wire  1 @% iBus_cmd_ready $end
    $var wire  1 f" iBus_cmd_valid $end
    $var wire 32 B% iBus_rsp_payload_data [31:0] $end
    $var wire  1 m) iBus_rsp_payload_error $end
    $var wire  1 A% iBus_rsp_valid $end
    $var wire 32 ?) lastStageInstruction [31:0] $end
    $var wire  1 B) lastStageIsFiring $end
    $var wire  1 A) lastStageIsValid $end
    $var wire 32 @) lastStagePc [31:0] $end
    $var wire  5 F) lastStageRegFileWrite_payload_address [4:0] $end
    $var wire 32 G) lastStageRegFileWrite_payload_data [31:0] $end
    $var wire  1 E) lastStageRegFileWrite_valid $end
    $var wire 32 ]# memory_BRANCH_CALC [31:0] $end
    $var wire  1 ^# memory_BRANCH_DO $end
    $var wire  1 i# memory_BYPASSABLE_MEMORY_STAGE $end
    $var wire 65 !' memory_DivPlugin_accumulator [64:0] $end
    $var wire  6 (' memory_DivPlugin_div_counter_value [5:0] $end
    $var wire  6 '' memory_DivPlugin_div_counter_valueNext [5:0] $end
    $var wire  1 &' memory_DivPlugin_div_counter_willClear $end
    $var wire  1 %' memory_DivPlugin_div_counter_willIncrement $end
    $var wire  1 *' memory_DivPlugin_div_counter_willOverflow $end
    $var wire  1 )' memory_DivPlugin_div_counter_willOverflowIfInc $end
    $var wire  1 +' memory_DivPlugin_div_done $end
    $var wire  1 $' memory_DivPlugin_div_needRevert $end
    $var wire 32 -' memory_DivPlugin_div_result [31:0] $end
    $var wire 32 5' memory_DivPlugin_div_stage_0_outNumerator [31:0] $end
    $var wire 32 4' memory_DivPlugin_div_stage_0_outRemainder [31:0] $end
    $var wire 33 2' memory_DivPlugin_div_stage_0_remainderMinusDenominator [32:0] $end
    $var wire 33 0' memory_DivPlugin_div_stage_0_remainderShifted [32:0] $end
    $var wire  1 l) memory_DivPlugin_frontendOk $end
    $var wire 33 |& memory_DivPlugin_rs1 [32:0] $end
    $var wire 32 ~& memory_DivPlugin_rs2 [31:0] $end
    $var wire  2 Z# memory_ENV_CTRL [1:0] $end
    $var wire 40 V' memory_ENV_CTRL_string [39:0] $end
    $var wire 32 E# memory_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 h# memory_INSTRUCTION [31:0] $end
    $var wire  1 L# memory_IS_DIV $end
    $var wire  1 3# memory_IS_MUL $end
    $var wire  1 #$ memory_MEMORY_ENABLE $end
    $var wire 32 *# memory_MEMORY_STORE_DATA_RF [31:0] $end
    $var wire  1 <# memory_MEMORY_WR $end
    $var wire 34 {" memory_MUL_HH [33:0] $end
    $var wire 34 R# memory_MUL_HL [33:0] $end
    $var wire 34 T# memory_MUL_LH [33:0] $end
    $var wire 32 V# memory_MUL_LL [31:0] $end
    $var wire 52 y" memory_MUL_LOW [51:0] $end
    $var wire 32 H# memory_PC [31:0] $end
    $var wire 32 V" memory_REGFILE_WRITE_DATA [31:0] $end
    $var wire  1 g# memory_REGFILE_WRITE_VALID $end
    $var wire  2 n# memory_SHIFT_CTRL [1:0] $end
    $var wire 72 ]' memory_SHIFT_CTRL_string [71:0] $end
    $var wire 32 m# memory_SHIFT_RIGHT [31:0] $end
    $var wire  1 m) memory_arbitration_flushIt $end
    $var wire  1 I$ memory_arbitration_flushNext $end
    $var wire  1 m) memory_arbitration_haltByOther $end
    $var wire  1 G$ memory_arbitration_haltItself $end
    $var wire  1 O$ memory_arbitration_isFiring $end
    $var wire  1 M$ memory_arbitration_isFlushed $end
    $var wire  1 N$ memory_arbitration_isMoving $end
    $var wire  1 K$ memory_arbitration_isStuck $end
    $var wire  1 L$ memory_arbitration_isStuckByOthers $end
    $var wire  1 J$ memory_arbitration_isValid $end
    $var wire  1 H$ memory_arbitration_removeIt $end
    $var wire  2 \# memory_to_writeBack_ENV_CTRL [1:0] $end
    $var wire 40 Z' memory_to_writeBack_ENV_CTRL_string [39:0] $end
    $var wire 32 D# memory_to_writeBack_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 4$ memory_to_writeBack_INSTRUCTION [31:0] $end
    $var wire  1 M# memory_to_writeBack_IS_MUL $end
    $var wire  1 "$ memory_to_writeBack_MEMORY_ENABLE $end
    $var wire 32 Y" memory_to_writeBack_MEMORY_STORE_DATA_RF [31:0] $end
    $var wire  1 !$ memory_to_writeBack_MEMORY_WR $end
    $var wire 34 N# memory_to_writeBack_MUL_HH [33:0] $end
    $var wire 52 P# memory_to_writeBack_MUL_LOW [51:0] $end
    $var wire 32 3$ memory_to_writeBack_PC [31:0] $end
    $var wire 32 Z" memory_to_writeBack_REGFILE_WRITE_DATA [31:0] $end
    $var wire  1 j# memory_to_writeBack_REGFILE_WRITE_VALID $end
    $var wire  1 L" reset $end
    $var wire  1 m) softwareInterrupt $end
    $var wire  2 D' switch_CsrPlugin_l1031 [1:0] $end
    $var wire  2 b& switch_CsrPlugin_l1460 [1:0] $end
    $var wire  2 i% switch_Misc_l232 [1:0] $end
    $var wire  3 2& switch_Misc_l232_1 [2:0] $end
    $var wire  1 m& switch_Misc_l232_2 $end
    $var wire  2 i% switch_MulPlugin_l148 [1:0] $end
    $var wire  2 ^% switch_MulPlugin_l87 [1:0] $end
    $var wire  1 m) timerInterrupt $end
    $var wire  1 _% toplevel_dataCache_1_io_cpu_flush_isStall $end
    $var wire 32 W% toplevel_dataCache_1_io_mem_cmd_rData_address [31:0] $end
    $var wire 32 X% toplevel_dataCache_1_io_mem_cmd_rData_data [31:0] $end
    $var wire  1 [% toplevel_dataCache_1_io_mem_cmd_rData_last $end
    $var wire  4 Y% toplevel_dataCache_1_io_mem_cmd_rData_mask [3:0] $end
    $var wire  3 Z% toplevel_dataCache_1_io_mem_cmd_rData_size [2:0] $end
    $var wire  1 V% toplevel_dataCache_1_io_mem_cmd_rData_uncached $end
    $var wire  1 U% toplevel_dataCache_1_io_mem_cmd_rData_wr $end
    $var wire  1 T% toplevel_dataCache_1_io_mem_cmd_rValidN $end
    $var wire 32 e$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_address [31:0] $end
    $var wire 32 %! toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_data [31:0] $end
    $var wire  1 h$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_last $end
    $var wire  4 f$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_mask [3:0] $end
    $var wire  3 g$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_size [2:0] $end
    $var wire  1 d$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_uncached $end
    $var wire  1 '! toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_payload_wr $end
    $var wire  1 c$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_ready $end
    $var wire  1 #! toplevel_dataCache_1_io_mem_cmd_s2mPipe_m2sPipe_valid $end
    $var wire 32 O% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_address [31:0] $end
    $var wire 32 P% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_data [31:0] $end
    $var wire  1 S% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_last $end
    $var wire  4 Q% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_mask [3:0] $end
    $var wire  3 R% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_size [2:0] $end
    $var wire  1 N% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_uncached $end
    $var wire  1 M% toplevel_dataCache_1_io_mem_cmd_s2mPipe_payload_wr $end
    $var wire 32 e$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_address [31:0] $end
    $var wire 32 %! toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_data [31:0] $end
    $var wire  1 h$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_last $end
    $var wire  4 f$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_mask [3:0] $end
    $var wire  3 g$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_size [2:0] $end
    $var wire  1 d$ toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_uncached $end
    $var wire  1 '! toplevel_dataCache_1_io_mem_cmd_s2mPipe_rData_wr $end
    $var wire  1 #! toplevel_dataCache_1_io_mem_cmd_s2mPipe_rValid $end
    $var wire  1 L% toplevel_dataCache_1_io_mem_cmd_s2mPipe_ready $end
    $var wire  1 K% toplevel_dataCache_1_io_mem_cmd_s2mPipe_valid $end
    $var wire  1 6% when_CsrPlugin_l1259 $end
    $var wire  1 =% when_CsrPlugin_l1259_1 $end
    $var wire  1 >% when_CsrPlugin_l1259_2 $end
    $var wire  1 ?% when_CsrPlugin_l1259_3 $end
    $var wire  1 O& when_CsrPlugin_l1272 $end
    $var wire  1 9& when_CsrPlugin_l1296 $end
    $var wire  1 R& when_CsrPlugin_l1302 $end
    $var wire  1 S& when_CsrPlugin_l1302_1 $end
    $var wire  1 T& when_CsrPlugin_l1302_2 $end
    $var wire  1 =% when_CsrPlugin_l1335 $end
    $var wire  1 >% when_CsrPlugin_l1335_1 $end
    $var wire  1 ?% when_CsrPlugin_l1335_2 $end
    $var wire  1 Y& when_CsrPlugin_l1340 $end
    $var wire  1 [& when_CsrPlugin_l1346 $end
    $var wire  1 `& when_CsrPlugin_l1390 $end
    $var wire  1 l) when_CsrPlugin_l1398 $end
    $var wire  1 a& when_CsrPlugin_l1456 $end
    $var wire  1 d& when_CsrPlugin_l1527 $end
    $var wire  1 g& when_CsrPlugin_l1547 $end
    $var wire  1 m) when_CsrPlugin_l1548 $end
    $var wire  1 h& when_CsrPlugin_l1555 $end
    $var wire  1 n& when_CsrPlugin_l1587 $end
    $var wire  1 n& when_CsrPlugin_l1591 $end
    $var wire  1 =% when_CsrPlugin_l1669 $end
    $var wire  1 =% when_CsrPlugin_l1669_1 $end
    $var wire  1 =% when_CsrPlugin_l1669_2 $end
    $var wire  1 =% when_CsrPlugin_l1669_3 $end
    $var wire  1 =% when_CsrPlugin_l1669_4 $end
    $var wire  1 =% when_CsrPlugin_l1669_5 $end
    $var wire  1 =% when_CsrPlugin_l1669_6 $end
    $var wire  1 =% when_CsrPlugin_l1669_7 $end
    $var wire  1 =% when_CsrPlugin_l1669_8 $end
    $var wire  1 =% when_CsrPlugin_l1669_9 $end
    $var wire  1 E' when_CsrPlugin_l1702 $end
    $var wire  1 F' when_CsrPlugin_l1709 $end
    $var wire  1 m) when_CsrPlugin_l1717 $end
    $var wire  1 % when_CsrPlugin_l1719 $end
    $var wire  1 G' when_CsrPlugin_l1725 $end
    $var wire  1 m) when_DBusCachedPlugin_l352 $end
    $var wire  1 `% when_DBusCachedPlugin_l394 $end
    $var wire  1 a% when_DBusCachedPlugin_l410 $end
    $var wire  1 m) when_DBusCachedPlugin_l472 $end
    $var wire  1 b% when_DBusCachedPlugin_l533 $end
    $var wire  1 c% when_DBusCachedPlugin_l553 $end
    $var wire  1 k% when_DBusCachedPlugin_l580 $end
    $var wire  1 ,% when_Fetcher_l133 $end
    $var wire  1 -% when_Fetcher_l133_1 $end
    $var wire  1 0% when_Fetcher_l160 $end
    $var wire  1 :% when_Fetcher_l242 $end
    $var wire  1 ;% when_Fetcher_l322 $end
    $var wire  1 2% when_Fetcher_l331 $end
    $var wire  1 2% when_Fetcher_l331_1 $end
    $var wire  1 =% when_Fetcher_l331_2 $end
    $var wire  1 >% when_Fetcher_l331_3 $end
    $var wire  1 ?% when_Fetcher_l331_4 $end
    $var wire  1 .& when_HazardSimplePlugin_l105 $end
    $var wire  1 /& when_HazardSimplePlugin_l108 $end
    $var wire  1 0& when_HazardSimplePlugin_l113 $end
    $var wire  1 "& when_HazardSimplePlugin_l45 $end
    $var wire  1 && when_HazardSimplePlugin_l45_1 $end
    $var wire  1 +& when_HazardSimplePlugin_l45_2 $end
    $var wire  1 l) when_HazardSimplePlugin_l47 $end
    $var wire  1 ~% when_HazardSimplePlugin_l48 $end
    $var wire  1 $& when_HazardSimplePlugin_l48_1 $end
    $var wire  1 )& when_HazardSimplePlugin_l48_2 $end
    $var wire  1 !& when_HazardSimplePlugin_l51 $end
    $var wire  1 %& when_HazardSimplePlugin_l51_1 $end
    $var wire  1 *& when_HazardSimplePlugin_l51_2 $end
    $var wire  1 #& when_HazardSimplePlugin_l57 $end
    $var wire  1 '& when_HazardSimplePlugin_l57_1 $end
    $var wire  1 ,& when_HazardSimplePlugin_l57_2 $end
    $var wire  1 m) when_HazardSimplePlugin_l58 $end
    $var wire  1 (& when_HazardSimplePlugin_l58_1 $end
    $var wire  1 -& when_HazardSimplePlugin_l58_2 $end
    $var wire  1 G% when_IBusCachedPlugin_l245 $end
    $var wire  1 H% when_IBusCachedPlugin_l250 $end
    $var wire  1 I% when_IBusCachedPlugin_l256 $end
    $var wire  1 J% when_IBusCachedPlugin_l262 $end
    $var wire  1 -$ when_IBusCachedPlugin_l273 $end
    $var wire  1 H' when_InstructionCache_l239 $end
    $var wire  1 ,' when_MulDivIterativePlugin_l126 $end
    $var wire  1 >% when_MulDivIterativePlugin_l126_1 $end
    $var wire  1 .' when_MulDivIterativePlugin_l128 $end
    $var wire  1 /' when_MulDivIterativePlugin_l129 $end
    $var wire  1 /' when_MulDivIterativePlugin_l132 $end
    $var wire  1 ,' when_MulDivIterativePlugin_l151 $end
    $var wire  1 >% when_MulDivIterativePlugin_l162 $end
    $var wire  1 {& when_MulPlugin_l147 $end
    $var wire  1 =% when_Pipeline_l124 $end
    $var wire  1 >% when_Pipeline_l124_1 $end
    $var wire  1 =% when_Pipeline_l124_10 $end
    $var wire  1 =% when_Pipeline_l124_11 $end
    $var wire  1 =% when_Pipeline_l124_12 $end
    $var wire  1 >% when_Pipeline_l124_13 $end
    $var wire  1 ?% when_Pipeline_l124_14 $end
    $var wire  1 =% when_Pipeline_l124_15 $end
    $var wire  1 =% when_Pipeline_l124_16 $end
    $var wire  1 =% when_Pipeline_l124_17 $end
    $var wire  1 >% when_Pipeline_l124_18 $end
    $var wire  1 ?% when_Pipeline_l124_19 $end
    $var wire  1 7' when_Pipeline_l124_2 $end
    $var wire  1 =% when_Pipeline_l124_20 $end
    $var wire  1 =% when_Pipeline_l124_21 $end
    $var wire  1 >% when_Pipeline_l124_22 $end
    $var wire  1 =% when_Pipeline_l124_23 $end
    $var wire  1 >% when_Pipeline_l124_24 $end
    $var wire  1 ?% when_Pipeline_l124_25 $end
    $var wire  1 =% when_Pipeline_l124_26 $end
    $var wire  1 =% when_Pipeline_l124_27 $end
    $var wire  1 =% when_Pipeline_l124_28 $end
    $var wire  1 =% when_Pipeline_l124_29 $end
    $var wire  1 =% when_Pipeline_l124_3 $end
    $var wire  1 >% when_Pipeline_l124_30 $end
    $var wire  1 =% when_Pipeline_l124_31 $end
    $var wire  1 =% when_Pipeline_l124_32 $end
    $var wire  1 =% when_Pipeline_l124_33 $end
    $var wire  1 >% when_Pipeline_l124_34 $end
    $var wire  1 ?% when_Pipeline_l124_35 $end
    $var wire  1 =% when_Pipeline_l124_36 $end
    $var wire  1 >% when_Pipeline_l124_37 $end
    $var wire  1 ?% when_Pipeline_l124_38 $end
    $var wire  1 =% when_Pipeline_l124_39 $end
    $var wire  1 >% when_Pipeline_l124_4 $end
    $var wire  1 >% when_Pipeline_l124_40 $end
    $var wire  1 =% when_Pipeline_l124_41 $end
    $var wire  1 =% when_Pipeline_l124_42 $end
    $var wire  1 =% when_Pipeline_l124_43 $end
    $var wire  1 =% when_Pipeline_l124_44 $end
    $var wire  1 =% when_Pipeline_l124_45 $end
    $var wire  1 =% when_Pipeline_l124_46 $end
    $var wire  1 =% when_Pipeline_l124_47 $end
    $var wire  1 =% when_Pipeline_l124_48 $end
    $var wire  1 >% when_Pipeline_l124_49 $end
    $var wire  1 ?% when_Pipeline_l124_5 $end
    $var wire  1 ?% when_Pipeline_l124_50 $end
    $var wire  1 >% when_Pipeline_l124_51 $end
    $var wire  1 ?% when_Pipeline_l124_52 $end
    $var wire  1 >% when_Pipeline_l124_53 $end
    $var wire  1 >% when_Pipeline_l124_54 $end
    $var wire  1 >% when_Pipeline_l124_55 $end
    $var wire  1 >% when_Pipeline_l124_56 $end
    $var wire  1 >% when_Pipeline_l124_57 $end
    $var wire  1 >% when_Pipeline_l124_58 $end
    $var wire  1 >% when_Pipeline_l124_59 $end
    $var wire  1 =% when_Pipeline_l124_6 $end
    $var wire  1 ?% when_Pipeline_l124_60 $end
    $var wire  1 ?% when_Pipeline_l124_61 $end
    $var wire  1 >% when_Pipeline_l124_7 $end
    $var wire  1 ?% when_Pipeline_l124_8 $end
    $var wire  1 =% when_Pipeline_l124_9 $end
    $var wire  1 8' when_Pipeline_l151 $end
    $var wire  1 k$ when_Pipeline_l151_1 $end
    $var wire  1 9' when_Pipeline_l151_2 $end
    $var wire  1 ;$ when_Pipeline_l154 $end
    $var wire  1 E$ when_Pipeline_l154_1 $end
    $var wire  1 N$ when_Pipeline_l154_2 $end
    $var wire  1 l% when_RegFilePlugin_l63 $end
    $var wire  1 \% when_Stream_l369 $end
    $var wire 32 l" writeBack_DBusCachedPlugin_rspData [31:0] $end
    $var wire 32 j% writeBack_DBusCachedPlugin_rspFormated [31:0] $end
    $var wire 32 h% writeBack_DBusCachedPlugin_rspRf [31:0] $end
    $var wire 32 h% writeBack_DBusCachedPlugin_rspShifted [31:0] $end
    $var wire  8 d% writeBack_DBusCachedPlugin_rspSplits_0 [7:0] $end
    $var wire  8 e% writeBack_DBusCachedPlugin_rspSplits_1 [7:0] $end
    $var wire  8 f% writeBack_DBusCachedPlugin_rspSplits_2 [7:0] $end
    $var wire  8 g% writeBack_DBusCachedPlugin_rspSplits_3 [7:0] $end
    $var wire  2 \# writeBack_ENV_CTRL [1:0] $end
    $var wire 40 Z' writeBack_ENV_CTRL_string [39:0] $end
    $var wire 32 D# writeBack_FORMAL_PC_NEXT [31:0] $end
    $var wire 32 4$ writeBack_INSTRUCTION [31:0] $end
    $var wire  1 M# writeBack_IS_MUL $end
    $var wire  1 "$ writeBack_MEMORY_ENABLE $end
    $var wire 32 Y" writeBack_MEMORY_STORE_DATA_RF [31:0] $end
    $var wire  1 !$ writeBack_MEMORY_WR $end
    $var wire 34 N# writeBack_MUL_HH [33:0] $end
    $var wire 52 P# writeBack_MUL_LOW [51:0] $end
    $var wire 66 x& writeBack_MulPlugin_result [65:0] $end
    $var wire 32 3$ writeBack_PC [31:0] $end
    $var wire 32 Z" writeBack_REGFILE_WRITE_DATA [31:0] $end
    $var wire  1 j# writeBack_REGFILE_WRITE_VALID $end
    $var wire  1 Q$ writeBack_arbitration_flushIt $end
    $var wire  1 R$ writeBack_arbitration_flushNext $end
    $var wire  1 m) writeBack_arbitration_haltByOther $end
    $var wire  1 L$ writeBack_arbitration_haltItself $end
    $var wire  1 U$ writeBack_arbitration_isFiring $end
    $var wire  1 Q$ writeBack_arbitration_isFlushed $end
    $var wire  1 T$ writeBack_arbitration_isMoving $end
    $var wire  1 L$ writeBack_arbitration_isStuck $end
    $var wire  1 m) writeBack_arbitration_isStuckByOthers $end
    $var wire  1 S$ writeBack_arbitration_isValid $end
    $var wire  1 P$ writeBack_arbitration_removeIt $end
    $scope module IBusCachedPlugin_cache $end
     $var wire  1 9) clk $end
     $var wire  1 5( decodeStage_hit_error $end
     $var wire  1 4( decodeStage_hit_valid $end
     $var wire  1 1( decodeStage_mmuRsp_allowExecute $end
     $var wire  1 /( decodeStage_mmuRsp_allowRead $end
     $var wire  1 0( decodeStage_mmuRsp_allowWrite $end
     $var wire  1 3( decodeStage_mmuRsp_bypassTranslation $end
     $var wire  1 2( decodeStage_mmuRsp_exception $end
     $var wire  1 -( decodeStage_mmuRsp_isIoAccess $end
     $var wire  1 .( decodeStage_mmuRsp_isPaging $end
     $var wire 32 e" decodeStage_mmuRsp_physicalAddress [31:0] $end
     $var wire  1 a" decodeStage_mmuRsp_refilling $end
     $var wire 32 _" fetchStage_hit_data [31:0] $end
     $var wire  1 +( fetchStage_hit_error $end
     $var wire  1 k) fetchStage_hit_hits_0 $end
     $var wire  1 k) fetchStage_hit_valid $end
     $var wire 32 _" fetchStage_hit_word [31:0] $end
     $var wire 32 _" fetchStage_read_banksValue_0_data [31:0] $end
     $var wire 32 _" fetchStage_read_banksValue_0_dataMem [31:0] $end
     $var wire 20 ,( fetchStage_read_waysValues_0_tag_address [19:0] $end
     $var wire  1 +( fetchStage_read_waysValues_0_tag_error $end
     $var wire  1 *( fetchStage_read_waysValues_0_tag_valid $end
     $var wire  1 d" io_cpu_decode_cacheMiss $end
     $var wire 32 c" io_cpu_decode_data [31:0] $end
     $var wire  1 `" io_cpu_decode_error $end
     $var wire  1 P" io_cpu_decode_isStuck $end
     $var wire  1 m) io_cpu_decode_isUser $end
     $var wire  1 Q" io_cpu_decode_isValid $end
     $var wire  1 b" io_cpu_decode_mmuException $end
     $var wire  1 a" io_cpu_decode_mmuRefilling $end
     $var wire 32 2$ io_cpu_decode_pc [31:0] $end
     $var wire 32 e" io_cpu_decode_physicalAddress [31:0] $end
     $var wire 32 _" io_cpu_fetch_data [31:0] $end
     $var wire 32 c" io_cpu_fetch_data_regNextWhen [31:0] $end
     $var wire  1 t) io_cpu_fetch_isRemoved $end
     $var wire  1 P" io_cpu_fetch_isStuck $end
     $var wire  1 O" io_cpu_fetch_isValid $end
     $var wire  1 l) io_cpu_fetch_mmuRsp_allowExecute $end
     $var wire  1 l) io_cpu_fetch_mmuRsp_allowRead $end
     $var wire  1 l) io_cpu_fetch_mmuRsp_allowWrite $end
     $var wire  1 #* io_cpu_fetch_mmuRsp_bypassTranslation $end
     $var wire  1 m) io_cpu_fetch_mmuRsp_exception $end
     $var wire  1 C) io_cpu_fetch_mmuRsp_isIoAccess $end
     $var wire  1 m) io_cpu_fetch_mmuRsp_isPaging $end
     $var wire 32 >) io_cpu_fetch_mmuRsp_physicalAddress [31:0] $end
     $var wire  1 m) io_cpu_fetch_mmuRsp_refilling $end
     $var wire 32 >) io_cpu_fetch_pc [31:0] $end
     $var wire 32 >) io_cpu_fetch_physicalAddress [31:0] $end
     $var wire 32 e" io_cpu_fill_payload [31:0] $end
     $var wire  1 R" io_cpu_fill_valid $end
     $var wire  1 ^" io_cpu_prefetch_haltIt $end
     $var wire  1 N" io_cpu_prefetch_isValid $end
     $var wire 32 $% io_cpu_prefetch_pc [31:0] $end
     $var wire  1 M" io_flush $end
     $var wire  1 @% io_mem_cmd_fire $end
     $var wire 32 g" io_mem_cmd_payload_address [31:0] $end
     $var wire  3 ~) io_mem_cmd_payload_size [2:0] $end
     $var wire  1 @% io_mem_cmd_ready $end
     $var wire  1 f" io_mem_cmd_valid $end
     $var wire 32 B% io_mem_rsp_payload_data [31:0] $end
     $var wire  1 m) io_mem_rsp_payload_error $end
     $var wire  1 A% io_mem_rsp_valid $end
     $var wire 32 w' lineLoader_address [31:0] $end
     $var wire  1 ~' lineLoader_cmdSent $end
     $var wire  1 u' lineLoader_fire $end
     $var wire  8 z' lineLoader_flushCounter [7:0] $end
     $var wire  1 y' lineLoader_flushPending $end
     $var wire  1 x' lineLoader_hadError $end
     $var wire  1 v' lineLoader_valid $end
     $var wire  1 m) lineLoader_wayToAllocate_willClear $end
     $var wire  1 "( lineLoader_wayToAllocate_willIncrement $end
     $var wire  1 "( lineLoader_wayToAllocate_willOverflow $end
     $var wire  1 l) lineLoader_wayToAllocate_willOverflowIfInc $end
     $var wire  3 #( lineLoader_wordIndex [2:0] $end
     $var wire 10 (( lineLoader_write_data_0_payload_address [9:0] $end
     $var wire 32 B% lineLoader_write_data_0_payload_data [31:0] $end
     $var wire  1 A% lineLoader_write_data_0_valid $end
     $var wire  7 %( lineLoader_write_tag_0_payload_address [6:0] $end
     $var wire 20 '( lineLoader_write_tag_0_payload_data_address [19:0] $end
     $var wire  1 x' lineLoader_write_tag_0_payload_data_error $end
     $var wire  1 &( lineLoader_write_tag_0_payload_data_valid $end
     $var wire  1 $( lineLoader_write_tag_0_valid $end
     $var wire  1 L" reset $end
     $var wire  1 {' when_InstructionCache_l338 $end
     $var wire  1 |' when_InstructionCache_l342 $end
     $var wire  1 }' when_InstructionCache_l351 $end
     $var wire  1 )( when_InstructionCache_l401 $end
     $var wire  1 2% when_InstructionCache_l435 $end
     $var wire  1 2% when_InstructionCache_l459 $end
     $var wire  1 2% when_InstructionCache_l459_1 $end
     $var wire  1 2% when_InstructionCache_l459_2 $end
     $var wire  1 !( when_Utils_l560 $end
    $upscope $end
    $scope module dataCache_1 $end
     $var wire  1 9) clk $end
     $var wire 10 E( dataReadCmd_payload [9:0] $end
     $var wire  1 D( dataReadCmd_valid $end
     $var wire 10 H( dataWriteCmd_payload_address [9:0] $end
     $var wire 32 I( dataWriteCmd_payload_data [31:0] $end
     $var wire  4 J( dataWriteCmd_payload_mask [3:0] $end
     $var wire  1 G( dataWriteCmd_payload_way [0:0] $end
     $var wire  1 F( dataWriteCmd_valid $end
     $var wire  1 m) haltCpu $end
     $var wire 32 T" io_cpu_execute_address [31:0] $end
     $var wire  2 ^% io_cpu_execute_args_size [1:0] $end
     $var wire  1 $$ io_cpu_execute_args_totalyConsistent $end
     $var wire  1 ($ io_cpu_execute_args_wr $end
     $var wire  1 h" io_cpu_execute_haltIt $end
     $var wire  1 S" io_cpu_execute_isValid $end
     $var wire  1 i" io_cpu_execute_refilling $end
     $var wire  7 ]" io_cpu_flush_payload_lineId [6:0] $end
     $var wire  1 \" io_cpu_flush_payload_singleLine $end
     $var wire  1 q" io_cpu_flush_ready $end
     $var wire  1 [" io_cpu_flush_valid $end
     $var wire 32 V" io_cpu_memory_address [31:0] $end
     $var wire  1 K$ io_cpu_memory_isStuck $end
     $var wire  1 U" io_cpu_memory_isValid $end
     $var wire  1 j" io_cpu_memory_isWrite $end
     $var wire  1 l) io_cpu_memory_mmuRsp_allowExecute $end
     $var wire  1 l) io_cpu_memory_mmuRsp_allowRead $end
     $var wire  1 l) io_cpu_memory_mmuRsp_allowWrite $end
     $var wire  1 %* io_cpu_memory_mmuRsp_bypassTranslation $end
     $var wire  1 m) io_cpu_memory_mmuRsp_exception $end
     $var wire  1 W" io_cpu_memory_mmuRsp_isIoAccess $end
     $var wire  1 m) io_cpu_memory_mmuRsp_isPaging $end
     $var wire 32 V" io_cpu_memory_mmuRsp_physicalAddress [31:0] $end
     $var wire  1 m) io_cpu_memory_mmuRsp_refilling $end
     $var wire  1 r" io_cpu_redo $end
     $var wire  1 o" io_cpu_writeBack_accessError $end
     $var wire 32 Z" io_cpu_writeBack_address [31:0] $end
     $var wire 32 l" io_cpu_writeBack_data [31:0] $end
     $var wire  1 !* io_cpu_writeBack_exclusiveOk $end
     $var wire  4 }) io_cpu_writeBack_fence_FM [3:0] $end
     $var wire  1 |) io_cpu_writeBack_fence_PI $end
     $var wire  1 {) io_cpu_writeBack_fence_PO $end
     $var wire  1 z) io_cpu_writeBack_fence_PR $end
     $var wire  1 y) io_cpu_writeBack_fence_PW $end
     $var wire  1 x) io_cpu_writeBack_fence_SI $end
     $var wire  1 w) io_cpu_writeBack_fence_SO $end
     $var wire  1 v) io_cpu_writeBack_fence_SR $end
     $var wire  1 u) io_cpu_writeBack_fence_SW $end
     $var wire  1 k" io_cpu_writeBack_haltIt $end
     $var wire  1 U$ io_cpu_writeBack_isFiring $end
     $var wire  1 L$ io_cpu_writeBack_isStuck $end
     $var wire  1 m) io_cpu_writeBack_isUser $end
     $var wire  1 X" io_cpu_writeBack_isValid $end
     $var wire  1 p" io_cpu_writeBack_isWrite $end
     $var wire  1 m) io_cpu_writeBack_keepMemRspData $end
     $var wire  1 m" io_cpu_writeBack_mmuException $end
     $var wire 32 Y" io_cpu_writeBack_storeData [31:0] $end
     $var wire  1 n" io_cpu_writeBack_unalignedAccess $end
     $var wire  1 "* io_cpu_writesPending $end
     $var wire  1 S( io_mem_cmd_fire $end
     $var wire 32 v" io_mem_cmd_payload_address [31:0] $end
     $var wire 32 Y" io_mem_cmd_payload_data [31:0] $end
     $var wire  1 l) io_mem_cmd_payload_last $end
     $var wire  4 w" io_mem_cmd_payload_mask [3:0] $end
     $var wire  3 x" io_mem_cmd_payload_size [2:0] $end
     $var wire  1 u" io_mem_cmd_payload_uncached $end
     $var wire  1 t" io_mem_cmd_payload_wr $end
     $var wire  1 T% io_mem_cmd_ready $end
     $var wire  1 s" io_mem_cmd_valid $end
     $var wire 32 j$ io_mem_rsp_payload_data [31:0] $end
     $var wire  1 m) io_mem_rsp_payload_error $end
     $var wire  1 $* io_mem_rsp_payload_last $end
     $var wire  1 i$ io_mem_rsp_valid $end
     $var wire  3 ') loader_counter_value [2:0] $end
     $var wire  3 &) loader_counter_valueNext [2:0] $end
     $var wire  1 m) loader_counter_willClear $end
     $var wire  1 %) loader_counter_willIncrement $end
     $var wire  1 )) loader_counter_willOverflow $end
     $var wire  1 () loader_counter_willOverflowIfInc $end
     $var wire  1 )) loader_done $end
     $var wire  1 +) loader_error $end
     $var wire  1 m) loader_kill $end
     $var wire  1 ,) loader_killReg $end
     $var wire  1 i" loader_valid $end
     $var wire  1 /) loader_valid_regNext $end
     $var wire  1 *) loader_waysAllocator [0:0] $end
     $var wire  1 R( memCmdSent $end
     $var wire  1 L" reset $end
     $var wire  1 l) rspLast $end
     $var wire  1 l) rspSync $end
     $var wire  1 U( stage0_dataColisions [0:0] $end
     $var wire  1 [( stage0_dataColisions_regNextWhen [0:0] $end
     $var wire  1 m) stage0_isAmo $end
     $var wire  4 T( stage0_mask [3:0] $end
     $var wire  1 m) stage0_wayInvalidate [0:0] $end
     $var wire  1 \( stageA_dataColisions [0:0] $end
     $var wire  1 m) stageA_isAmo $end
     $var wire  1 m) stageA_isLrsc $end
     $var wire  4 X( stageA_mask [3:0] $end
     $var wire  2 V( stageA_request_size [1:0] $end
     $var wire  1 W( stageA_request_totalyConsistent $end
     $var wire  1 j" stageA_request_wr $end
     $var wire  1 Y( stageA_wayHits [0:0] $end
     $var wire  1 Z( stageA_wayInvalidate [0:0] $end
     $var wire  1 {( stageB_badPermissions $end
     $var wire  1 u" stageB_bypassCache $end
     $var wire  1 m) stageB_consistancyHazard $end
     $var wire  1 y( stageB_cpuWriteToCache $end
     $var wire  1 n( stageB_dataColisions [0:0] $end
     $var wire 32 l( stageB_dataMux [31:0] $end
     $var wire 32 l( stageB_dataReadRsp_0 [31:0] $end
     $var wire  8 u( stageB_flusher_counter [7:0] $end
     $var wire  1 m) stageB_flusher_hold $end
     $var wire  1 x( stageB_flusher_start $end
     $var wire  1 t( stageB_flusher_waitDone $end
     $var wire 32 j$ stageB_ioMemRspMuxed [31:0] $end
     $var wire  1 m) stageB_isAmo $end
     $var wire  1 m) stageB_isAmoCached $end
     $var wire  1 m) stageB_isExternalAmo $end
     $var wire  1 m) stageB_isExternalLsrc $end
     $var wire  1 |( stageB_loadStoreFault $end
     $var wire  1 s( stageB_loaderValid $end
     $var wire  4 w" stageB_mask [3:0] $end
     $var wire  1 _( stageB_mmuRspFreeze $end
     $var wire  1 e( stageB_mmuRsp_allowExecute $end
     $var wire  1 c( stageB_mmuRsp_allowRead $end
     $var wire  1 d( stageB_mmuRsp_allowWrite $end
     $var wire  1 h( stageB_mmuRsp_bypassTranslation $end
     $var wire  1 f( stageB_mmuRsp_exception $end
     $var wire  1 u" stageB_mmuRsp_isIoAccess $end
     $var wire  1 b( stageB_mmuRsp_isPaging $end
     $var wire 32 a( stageB_mmuRsp_physicalAddress [31:0] $end
     $var wire  1 g( stageB_mmuRsp_refilling $end
     $var wire 32 Y" stageB_requestDataBypass [31:0] $end
     $var wire  2 ]( stageB_request_size [1:0] $end
     $var wire  1 ^( stageB_request_totalyConsistent $end
     $var wire  1 p" stageB_request_wr $end
     $var wire 20 k( stageB_tagsReadRsp_0_address [19:0] $end
     $var wire  1 j( stageB_tagsReadRsp_0_error $end
     $var wire  1 i( stageB_tagsReadRsp_0_valid $end
     $var wire  1 o( stageB_unaligned $end
     $var wire  1 m( stageB_wayInvalidate [0:0] $end
     $var wire  1 r( stageB_waysHit $end
     $var wire  1 q( stageB_waysHits [0:0] $end
     $var wire  1 p( stageB_waysHitsBeforeInvalidate [0:0] $end
     $var wire  7 7( tagsReadCmd_payload [6:0] $end
     $var wire  1 6( tagsReadCmd_valid $end
     $var wire  7 :( tagsWriteCmd_payload_address [6:0] $end
     $var wire 20 =( tagsWriteCmd_payload_data_address [19:0] $end
     $var wire  1 <( tagsWriteCmd_payload_data_error $end
     $var wire  1 ;( tagsWriteCmd_payload_data_valid $end
     $var wire  1 9( tagsWriteCmd_payload_way [0:0] $end
     $var wire  1 8( tagsWriteCmd_valid $end
     $var wire  7 @( tagsWriteLastCmd_payload_address [6:0] $end
     $var wire 20 C( tagsWriteLastCmd_payload_data_address [19:0] $end
     $var wire  1 B( tagsWriteLastCmd_payload_data_error $end
     $var wire  1 A( tagsWriteLastCmd_payload_data_valid $end
     $var wire  1 ?( tagsWriteLastCmd_payload_way [0:0] $end
     $var wire  1 >( tagsWriteLastCmd_valid $end
     $var wire 32 N( ways_0_dataReadRsp [31:0] $end
     $var wire 32 N( ways_0_dataReadRspMem [31:0] $end
     $var wire 20 M( ways_0_tagsReadRsp_address [19:0] $end
     $var wire  1 L( ways_0_tagsReadRsp_error $end
     $var wire  1 K( ways_0_tagsReadRsp_valid $end
     $var wire  1 }( when_DataCache_l1000 $end
     $var wire  1 ~( when_DataCache_l1009 $end
     $var wire  1 !) when_DataCache_l1014 $end
     $var wire  1 ") when_DataCache_l1025 $end
     $var wire  1 #) when_DataCache_l1037 $end
     $var wire  1 $) when_DataCache_l1072 $end
     $var wire  1 g( when_DataCache_l1081 $end
     $var wire  1 -) when_DataCache_l1097 $end
     $var wire  1 .) when_DataCache_l1125 $end
     $var wire  1 0) when_DataCache_l1129 $end
     $var wire  1 1) when_DataCache_l1132 $end
     $var wire  1 O( when_DataCache_l645 $end
     $var wire  1 P( when_DataCache_l648 $end
     $var wire  1 Q( when_DataCache_l667 $end
     $var wire  1 ?% when_DataCache_l689 $end
     $var wire  1 >% when_DataCache_l776 $end
     $var wire  1 >% when_DataCache_l776_1 $end
     $var wire  1 >% when_DataCache_l776_2 $end
     $var wire  1 >% when_DataCache_l776_3 $end
     $var wire  1 ?% when_DataCache_l825 $end
     $var wire  1 ?% when_DataCache_l825_1 $end
     $var wire  1 ?% when_DataCache_l825_2 $end
     $var wire  1 ?% when_DataCache_l825_3 $end
     $var wire  1 ?% when_DataCache_l825_4 $end
     $var wire  1 ?% when_DataCache_l826 $end
     $var wire  1 ?% when_DataCache_l826_1 $end
     $var wire  1 ?% when_DataCache_l827 $end
     $var wire  1 `( when_DataCache_l829 $end
     $var wire  1 v( when_DataCache_l855 $end
     $var wire  1 l) when_DataCache_l861 $end
     $var wire  1 w( when_DataCache_l863 $end
     $var wire  1 w( when_DataCache_l877 $end
     $var wire  1 z( when_DataCache_l931 $end
     $var wire  1 u" when_DataCache_l996 $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


